{"remainingRequest":"E:\\临时文件夹\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\临时文件夹\\console\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\临时文件夹\\console\\web\\src\\store\\module\\dictionary.js","dependencies":[{"path":"E:\\临时文件夹\\console\\web\\src\\store\\module\\dictionary.js","mtime":1625854608000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovXHU0RTM0XHU2NUY2XHU2NTg3XHU0RUY2XHU1OTM5L2NvbnNvbGUvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovXHU0RTM0XHU2NUY2XHU2NTg3XHU0RUY2XHU1OTM5L2NvbnNvbGUvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IHsgZmluZFN5c0RpY3Rpb25hcnkgfSBmcm9tICdAL2FwaS9zeXNEaWN0aW9uYXJ5JzsKZXhwb3J0IHZhciBkaWN0aW9uYXJ5ID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIGRpY3Rpb25hcnlNYXA6IHt9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldERpY3Rpb25hcnlNYXA6IGZ1bmN0aW9uIHNldERpY3Rpb25hcnlNYXAoc3RhdGUsIGRpY3Rpb25hcnlNYXApIHsKICAgICAgc3RhdGUuZGljdGlvbmFyeU1hcCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgc3RhdGUuZGljdGlvbmFyeU1hcCksIGRpY3Rpb25hcnlNYXApOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy8g5LuO5ZCO5Y+w6I635Y+W5Yqo5oCB6Lev55SxCiAgICBnZXREaWN0aW9uYXJ5OiBmdW5jdGlvbiBnZXREaWN0aW9uYXJ5KF9yZWYsIHR5cGUpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBzdGF0ZSwgcmVzLCBkaWN0aW9uYXJ5TWFwLCBkaWN0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBzdGF0ZSA9IF9yZWYuc3RhdGU7CgogICAgICAgICAgICAgICAgaWYgKCFzdGF0ZS5kaWN0aW9uYXJ5TWFwW3R5cGVdKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5kaWN0aW9uYXJ5TWFwW3R5cGVdKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gZmluZFN5c0RpY3Rpb25hcnkoewogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMuY29kZSA9PT0gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBkaWN0aW9uYXJ5TWFwID0ge307CiAgICAgICAgICAgICAgICBkaWN0ID0gW107CiAgICAgICAgICAgICAgICByZXMuZGF0YS5yZXN5c0RpY3Rpb25hcnkuc3lzRGljdGlvbmFyeURldGFpbHMgJiYgcmVzLmRhdGEucmVzeXNEaWN0aW9uYXJ5LnN5c0RpY3Rpb25hcnlEZXRhaWxzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICBkaWN0LnB1c2goewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiBpdGVtLmxhYmVsLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBkaWN0aW9uYXJ5TWFwW3Jlcy5kYXRhLnJlc3lzRGljdGlvbmFyeS50eXBlXSA9IGRpY3Q7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldERpY3Rpb25hcnlNYXAnLCBkaWN0aW9uYXJ5TWFwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHN0YXRlLmRpY3Rpb25hcnlNYXBbdHlwZV0pOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0RGljdGlvbmFyeTogZnVuY3Rpb24gZ2V0RGljdGlvbmFyeShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGljdGlvbmFyeU1hcDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["E:/临时文件夹/console/web/src/store/module/dictionary.js"],"names":["findSysDictionary","dictionary","namespaced","state","dictionaryMap","mutations","setDictionaryMap","actions","getDictionary","type","commit","res","code","dict","data","resysDictionary","sysDictionaryDetails","map","item","push","label","value","getters"],"mappings":";;;;AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,UAAU,EAAE,IADY;AAExBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV,GAFiB;AAKxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,gBADS,4BACQH,KADR,EACeC,aADf,EAC8B;AACrCD,MAAAA,KAAK,CAACC,aAAN,mCAA2BD,KAAK,CAACC,aAAjC,GAAmDA,aAAnD;AACD;AAHQ,GALa;AAWxBG,EAAAA,OAAO,EAAE;AACP;AACMC,IAAAA,aAFC,+BAEgCC,IAFhC,EAEsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBC,gBAAAA,MAAuB,QAAvBA,MAAuB,EAAfP,KAAe,QAAfA,KAAe;;AAAA,qBACvCA,KAAK,CAACC,aAAN,CAAoBK,IAApB,CADuC;AAAA;AAAA;AAAA;;AAAA,iDAElCN,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAFkC;;AAAA;AAAA;AAAA,uBAIvBT,iBAAiB,CAAC;AAAES,kBAAAA,IAAI,EAAJA;AAAF,iBAAD,CAJM;;AAAA;AAInCE,gBAAAA,GAJmC;;AAAA,sBAKrCA,GAAG,CAACC,IAAJ,KAAa,CALwB;AAAA;AAAA;AAAA;;AAMjCR,gBAAAA,aANiC,GAMjB,EANiB;AAOjCS,gBAAAA,IAPiC,GAO1B,EAP0B;AAQvCF,gBAAAA,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,IAAiDL,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,CAA8CC,GAA9C,CAAkD,UAAAC,IAAI,EAAI;AACzGL,kBAAAA,IAAI,CAACM,IAAL,CAAU;AACRC,oBAAAA,KAAK,EAAEF,IAAI,CAACE,KADJ;AAERC,oBAAAA,KAAK,EAAEH,IAAI,CAACG;AAFJ,mBAAV;AAID,iBALgD,CAAjD;AAMAjB,gBAAAA,aAAa,CAACO,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBN,IAA1B,CAAb,GAA+CI,IAA/C;AACAH,gBAAAA,MAAM,CAAC,kBAAD,EAAqBN,aAArB,CAAN;AAfuC,iDAgBhCD,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAhBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB5C;AArBM,GAXe;AAkCxBa,EAAAA,OAAO,EAAE;AACPd,IAAAA,aADO,yBACOL,KADP,EACc;AACnB,aAAOA,KAAK,CAACC,aAAb;AACD;AAHM;AAlCe,CAAnB","sourcesContent":["import { findSysDictionary } from '@/api/sysDictionary'\n\nexport const dictionary = {\n  namespaced: true,\n  state: {\n    dictionaryMap: {}\n  },\n  mutations: {\n    setDictionaryMap(state, dictionaryMap) {\n      state.dictionaryMap = { ...state.dictionaryMap, ...dictionaryMap }\n    }\n\n  },\n  actions: {\n    // 从后台获取动态路由\n    async getDictionary({ commit, state }, type) {\n      if (state.dictionaryMap[type]) {\n        return state.dictionaryMap[type]\n      } else {\n        const res = await findSysDictionary({ type })\n        if (res.code === 0) {\n          const dictionaryMap = {}\n          const dict = []\n          res.data.resysDictionary.sysDictionaryDetails && res.data.resysDictionary.sysDictionaryDetails.map(item => {\n            dict.push({\n              label: item.label,\n              value: item.value\n            })\n          })\n          dictionaryMap[res.data.resysDictionary.type] = dict\n          commit('setDictionaryMap', dictionaryMap)\n          return state.dictionaryMap[type]\n        }\n      }\n    }\n  },\n  getters: {\n    getDictionary(state) {\n      return state.dictionaryMap\n    }\n  }\n}\n"]}]}