{"remainingRequest":"E:\\临时\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\临时\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\临时\\console\\web\\src\\view\\superAdmin\\authority\\components\\apis.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\临时\\console\\web\\src\\view\\superAdmin\\authority\\components\\apis.vue","mtime":1625854608000},{"path":"E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJFOi9cdTRFMzRcdTY1RjYvY29uc29sZS93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovXHU0RTM0XHU2NUY2L2NvbnNvbGUvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0QWxsQXBpcyB9IGZyb20gJ0AvYXBpL2FwaSc7CmltcG9ydCB7IFVwZGF0ZUNhc2JpbiwgZ2V0UG9saWN5UGF0aEJ5QXV0aG9yaXR5SWQgfSBmcm9tICdAL2FwaS9jYXNiaW4nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwaXMnLAogIHByb3BzOiB7CiAgICByb3c6IHsKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9LAogICAgICB0eXBlOiBPYmplY3QKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhcGlUcmVlRGF0YTogW10sCiAgICAgIGFwaVRyZWVJZHM6IFtdLAogICAgICBuZWVkQ29uZmlybTogZmFsc2UsCiAgICAgIGFwaURlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnZGVzY3JpcHRpb24nCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzMiwgYXBpcywgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGdldEFsbEFwaXMoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXMyID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBhcGlzID0gcmVzMi5kYXRhLmFwaXM7CiAgICAgICAgICAgICAgX3RoaXMuYXBpVHJlZURhdGEgPSBfdGhpcy5idWlsZEFwaVRyZWUoYXBpcyk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIGdldFBvbGljeVBhdGhCeUF1dGhvcml0eUlkKHsKICAgICAgICAgICAgICAgIGF1dGhvcml0eUlkOiBfdGhpcy5yb3cuYXV0aG9yaXR5SWQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF90aGlzLmFjdGl2ZVVzZXJJZCA9IF90aGlzLnJvdy5hdXRob3JpdHlJZDsKICAgICAgICAgICAgICBfdGhpcy5hcGlUcmVlSWRzID0gW107CiAgICAgICAgICAgICAgcmVzLmRhdGEucGF0aHMgJiYgcmVzLmRhdGEucGF0aHMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5hcGlUcmVlSWRzLnB1c2goJ3A6JyArIGl0ZW0ucGF0aCArICdtOicgKyBpdGVtLm1ldGhvZCk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgbm9kZUNoYW5nZTogZnVuY3Rpb24gbm9kZUNoYW5nZSgpIHsKICAgICAgdGhpcy5uZWVkQ29uZmlybSA9IHRydWU7CiAgICB9LAogICAgLy8g5pq06Zyy57uZ5aSW5bGC5L2/55So55qE5YiH5o2i5oum5oiq57uf5LiA5pa55rOVCiAgICBlbnRlckFuZE5leHQ6IGZ1bmN0aW9uIGVudGVyQW5kTmV4dCgpIHsKICAgICAgdGhpcy5hdXRoQXBpRW50ZXIoKTsKICAgIH0sCiAgICAvLyDliJvlu7phcGnmoJHmlrnms5UKICAgIGJ1aWxkQXBpVHJlZTogZnVuY3Rpb24gYnVpbGRBcGlUcmVlKGFwaXMpIHsKICAgICAgdmFyIGFwaU9iaiA9IHt9OwogICAgICBhcGlzICYmIGFwaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaXRlbS5vbmx5SWQgPSAncDonICsgaXRlbS5wYXRoICsgJ206JyArIGl0ZW0ubWV0aG9kOwoKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFwaU9iaiwgaXRlbS5hcGlHcm91cCkpIHsKICAgICAgICAgIGFwaU9ialtpdGVtLmFwaUdyb3VwXS5wdXNoKGl0ZW0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBPYmplY3QuYXNzaWduKGFwaU9iaiwgX2RlZmluZVByb3BlcnR5KHt9LCBpdGVtLmFwaUdyb3VwLCBbaXRlbV0pKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB2YXIgYXBpVHJlZSA9IFtdOwoKICAgICAgZm9yICh2YXIga2V5IGluIGFwaU9iaikgewogICAgICAgIHZhciB0cmVlTm9kZSA9IHsKICAgICAgICAgIElEOiBrZXksCiAgICAgICAgICBkZXNjcmlwdGlvbjoga2V5ICsgJ+e7hCcsCiAgICAgICAgICBjaGlsZHJlbjogYXBpT2JqW2tleV0KICAgICAgICB9OwogICAgICAgIGFwaVRyZWUucHVzaCh0cmVlTm9kZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhcGlUcmVlOwogICAgfSwKICAgIC8vIOWFs+iBlOWFs+ezu+ehruWumgogICAgYXV0aEFwaUVudGVyOiBmdW5jdGlvbiBhdXRoQXBpRW50ZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNoZWNrQXJyLCBjYXNiaW5JbmZvcywgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjaGVja0FyciA9IF90aGlzMi4kcmVmcy5hcGlUcmVlLmdldENoZWNrZWROb2Rlcyh0cnVlKTsKICAgICAgICAgICAgICAgIGNhc2JpbkluZm9zID0gW107CiAgICAgICAgICAgICAgICBjaGVja0FyciAmJiBjaGVja0Fyci5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgdmFyIGNhc2JpbkluZm8gPSB7CiAgICAgICAgICAgICAgICAgICAgcGF0aDogaXRlbS5wYXRoLAogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogaXRlbS5tZXRob2QKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgY2FzYmluSW5mb3MucHVzaChjYXNiaW5JbmZvKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIFVwZGF0ZUNhc2Jpbih7CiAgICAgICAgICAgICAgICAgIGF1dGhvcml0eUlkOiBfdGhpczIuYWN0aXZlVXNlcklkLAogICAgICAgICAgICAgICAgICBjYXNiaW5JbmZvczogY2FzYmluSW5mb3MKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ2Fwaeiuvue9ruaIkOWKnycKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["apis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"clearflex\">\n      <el-button class=\"fl-right\" size=\"small\" type=\"primary\" @click=\"authApiEnter\">确 定</el-button>\n    </div>\n    <el-tree\n      ref=\"apiTree\"\n      :data=\"apiTreeData\"\n      :default-checked-keys=\"apiTreeIds\"\n      :props=\"apiDefaultProps\"\n      default-expand-all\n      highlight-current\n      node-key=\"onlyId\"\n      show-checkbox\n      @check=\"nodeChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport { getAllApis } from '@/api/api'\nimport { UpdateCasbin, getPolicyPathByAuthorityId } from '@/api/casbin'\nexport default {\n  name: 'Apis',\n  props: {\n    row: {\n      default: function() {\n        return {}\n      },\n      type: Object\n    }\n  },\n  data() {\n    return {\n      apiTreeData: [],\n      apiTreeIds: [],\n      needConfirm: false,\n      apiDefaultProps: {\n        children: 'children',\n        label: 'description'\n      }\n    }\n  },\n  async created() {\n    // 获取api并整理成树结构\n    const res2 = await getAllApis()\n    const apis = res2.data.apis\n\n    this.apiTreeData = this.buildApiTree(apis)\n    const res = await getPolicyPathByAuthorityId({\n      authorityId: this.row.authorityId\n    })\n    this.activeUserId = this.row.authorityId\n    this.apiTreeIds = []\n    res.data.paths && res.data.paths.map(item => {\n      this.apiTreeIds.push('p:' + item.path + 'm:' + item.method)\n    })\n  },\n  methods: {\n    nodeChange() {\n      this.needConfirm = true\n    },\n    // 暴露给外层使用的切换拦截统一方法\n    enterAndNext() {\n      this.authApiEnter()\n    },\n    // 创建api树方法\n    buildApiTree(apis) {\n      const apiObj = {}\n      apis &&\n        apis.map(item => {\n          item.onlyId = 'p:' + item.path + 'm:' + item.method\n          if (Object.prototype.hasOwnProperty.call(apiObj, item.apiGroup)) {\n            apiObj[item.apiGroup].push(item)\n          } else {\n            Object.assign(apiObj, { [item.apiGroup]: [item] })\n          }\n        })\n      const apiTree = []\n      for (const key in apiObj) {\n        const treeNode = {\n          ID: key,\n          description: key + '组',\n          children: apiObj[key]\n        }\n        apiTree.push(treeNode)\n      }\n      return apiTree\n    },\n    // 关联关系确定\n    async authApiEnter() {\n      const checkArr = this.$refs.apiTree.getCheckedNodes(true)\n      var casbinInfos = []\n      checkArr && checkArr.map(item => {\n        var casbinInfo = {\n          path: item.path,\n          method: item.method\n        }\n        casbinInfos.push(casbinInfo)\n      })\n      const res = await UpdateCasbin({\n        authorityId: this.activeUserId,\n        casbinInfos\n      })\n      if (res.code === 0) {\n        this.$message({ type: 'success', message: 'api设置成功' })\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/view/superAdmin/authority/components"}]}