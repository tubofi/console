{"remainingRequest":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\console\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\console\\web\\src\\api\\autoCode.js","dependencies":[{"path":"E:\\console\\web\\src\\api\\autoCode.js","mtime":1629645123977},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629645113861},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1629645113236},{"path":"E:\\console\\web\\node_modules\\eslint-loader\\index.js","mtime":1629645117451}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHNlcnZpY2UgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKZXhwb3J0IHZhciBwcmV2aWV3ID0gZnVuY3Rpb24gcHJldmlldyhkYXRhKSB7CiAgcmV0dXJuIHNlcnZpY2UoewogICAgdXJsOiAnL2F1dG9Db2RlL3ByZXZpZXcnLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn07CmV4cG9ydCB2YXIgY3JlYXRlVGVtcCA9IGZ1bmN0aW9uIGNyZWF0ZVRlbXAoZGF0YSkgewogIHJldHVybiBzZXJ2aWNlKHsKICAgIHVybDogJy9hdXRvQ29kZS9jcmVhdGVUZW1wJywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogZGF0YSwKICAgIHJlc3BvbnNlVHlwZTogJ2Jsb2InCiAgfSk7Cn07IC8vIEBUYWdzIFN5c0FwaQovLyBAU3VtbWFyeSDojrflj5blvZPliY3miYDmnInmlbDmja7lupMKLy8gQFNlY3VyaXR5IEFwaUtleUF1dGgKLy8gQGFjY2VwdCBhcHBsaWNhdGlvbi9qc29uCi8vIEBQcm9kdWNlIGFwcGxpY2F0aW9uL2pzb24KLy8gQFN1Y2Nlc3MgMjAwIHtzdHJpbmd9IHN0cmluZyAieyJzdWNjZXNzIjp0cnVlLCJkYXRhIjp7fSwibXNnIjoi5Yib5bu65oiQ5YqfIn0iCi8vIEBSb3V0ZXIgL2F1dG9Db2RlL2dldERhdGFiYXNlIFtnZXRdCgpleHBvcnQgdmFyIGdldERCID0gZnVuY3Rpb24gZ2V0REIoKSB7CiAgcmV0dXJuIHNlcnZpY2UoewogICAgdXJsOiAnL2F1dG9Db2RlL2dldERCJywKICAgIG1ldGhvZDogJ2dldCcKICB9KTsKfTsgLy8gQFRhZ3MgU3lzQXBpCi8vIEBTdW1tYXJ5IOiOt+WPluW9k+WJjeaVsOaNruW6k+aJgOacieihqAovLyBAU2VjdXJpdHkgQXBpS2V5QXV0aAovLyBAYWNjZXB0IGFwcGxpY2F0aW9uL2pzb24KLy8gQFByb2R1Y2UgYXBwbGljYXRpb24vanNvbgovLyBAU3VjY2VzcyAyMDAge3N0cmluZ30gc3RyaW5nICJ7InN1Y2Nlc3MiOnRydWUsImRhdGEiOnt9LCJtc2ciOiLliJvlu7rmiJDlip8ifSIKLy8gQFJvdXRlciAvYXV0b0NvZGUvZ2V0VGFibGVzIFtnZXRdCgpleHBvcnQgdmFyIGdldFRhYmxlID0gZnVuY3Rpb24gZ2V0VGFibGUocGFyYW1zKSB7CiAgcmV0dXJuIHNlcnZpY2UoewogICAgdXJsOiAnL2F1dG9Db2RlL2dldFRhYmxlcycsCiAgICBtZXRob2Q6ICdnZXQnLAogICAgcGFyYW1zOiBwYXJhbXMKICB9KTsKfTsgLy8gQFRhZ3MgU3lzQXBpCi8vIEBTdW1tYXJ5IOiOt+WPluW9k+WJjeaVsOaNruW6k+aJgOacieihqAovLyBAU2VjdXJpdHkgQXBpS2V5QXV0aAovLyBAYWNjZXB0IGFwcGxpY2F0aW9uL2pzb24KLy8gQFByb2R1Y2UgYXBwbGljYXRpb24vanNvbgovLyBAU3VjY2VzcyAyMDAge3N0cmluZ30gc3RyaW5nICJ7InN1Y2Nlc3MiOnRydWUsImRhdGEiOnt9LCJtc2ciOiLliJvlu7rmiJDlip8ifSIKLy8gQFJvdXRlciAvYXV0b0NvZGUvZ2V0Q29sdW1uIFtnZXRdCgpleHBvcnQgdmFyIGdldENvbHVtbiA9IGZ1bmN0aW9uIGdldENvbHVtbihwYXJhbXMpIHsKICByZXR1cm4gc2VydmljZSh7CiAgICB1cmw6ICcvYXV0b0NvZGUvZ2V0Q29sdW1uJywKICAgIG1ldGhvZDogJ2dldCcsCiAgICBwYXJhbXM6IHBhcmFtcwogIH0pOwp9Ow=="},{"version":3,"sources":["E:/console/web/src/api/autoCode.js"],"names":["service","preview","data","url","method","createTemp","responseType","getDB","getTable","params","getColumn"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC/B,SAAOF,OAAO,CAAC;AACbG,IAAAA,GAAG,EAAE,mBADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA;AAHa,GAAD,CAAd;AAKD,CANM;AAQP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACH,IAAD,EAAU;AAClC,SAAOF,OAAO,CAAC;AACbG,IAAAA,GAAG,EAAE,sBADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbF,IAAAA,IAAI,EAAJA,IAHa;AAIbI,IAAAA,YAAY,EAAE;AAJD,GAAD,CAAd;AAMD,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzB,SAAOP,OAAO,CAAC;AACbG,IAAAA,GAAG,EAAE,iBADQ;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAClC,SAAOT,OAAO,CAAC;AACbG,IAAAA,GAAG,EAAE,qBADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbK,IAAAA,MAAM,EAANA;AAHa,GAAD,CAAd;AAKD,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,MAAD,EAAY;AACnC,SAAOT,OAAO,CAAC;AACbG,IAAAA,GAAG,EAAE,qBADQ;AAEbC,IAAAA,MAAM,EAAE,KAFK;AAGbK,IAAAA,MAAM,EAANA;AAHa,GAAD,CAAd;AAKD,CANM","sourcesContent":["import service from '@/utils/request'\r\n\r\nexport const preview = (data) => {\r\n  return service({\r\n    url: '/autoCode/preview',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport const createTemp = (data) => {\r\n  return service({\r\n    url: '/autoCode/createTemp',\r\n    method: 'post',\r\n    data,\r\n    responseType: 'blob'\r\n  })\r\n}\r\n\r\n// @Tags SysApi\r\n// @Summary 获取当前所有数据库\r\n// @Security ApiKeyAuth\r\n// @accept application/json\r\n// @Produce application/json\r\n// @Success 200 {string} string \"{\"success\":true,\"data\":{},\"msg\":\"创建成功\"}\"\r\n// @Router /autoCode/getDatabase [get]\r\nexport const getDB = () => {\r\n  return service({\r\n    url: '/autoCode/getDB',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// @Tags SysApi\r\n// @Summary 获取当前数据库所有表\r\n// @Security ApiKeyAuth\r\n// @accept application/json\r\n// @Produce application/json\r\n// @Success 200 {string} string \"{\"success\":true,\"data\":{},\"msg\":\"创建成功\"}\"\r\n// @Router /autoCode/getTables [get]\r\nexport const getTable = (params) => {\r\n  return service({\r\n    url: '/autoCode/getTables',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n// @Tags SysApi\r\n// @Summary 获取当前数据库所有表\r\n// @Security ApiKeyAuth\r\n// @accept application/json\r\n// @Produce application/json\r\n// @Success 200 {string} string \"{\"success\":true,\"data\":{},\"msg\":\"创建成功\"}\"\r\n// @Router /autoCode/getColumn [get]\r\nexport const getColumn = (params) => {\r\n  return service({\r\n    url: '/autoCode/getColumn',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n"]}]}