{"remainingRequest":"E:\\临时文件夹\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\临时文件夹\\console\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\临时文件夹\\console\\web\\src\\permission.js","dependencies":[{"path":"E:\\临时文件夹\\console\\web\\src\\permission.js","mtime":1625854608000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovXHU0RTM0XHU2NUY2XHU2NTg3XHU0RUY2XHU1OTM5L2NvbnNvbGUvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovXHU0RTM0XHU2NUY2XHU2NTg3XHU0RUY2XHU1OTM5L2NvbnNvbGUvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCB7IHN0b3JlIH0gZnJvbSAnQC9zdG9yZSc7CmltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9wYWdlJzsKdmFyIGFzeW5jUm91dGVyRmxhZyA9IDA7CnZhciB3aGl0ZUxpc3QgPSBbJ0xvZ2luJywgJ0luaXQnXTsKcm91dGVyLmJlZm9yZUVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciB0b2tlbiwgYXN5bmNSb3V0ZXJzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICB0b2tlbiA9IHN0b3JlLmdldHRlcnNbJ3VzZXIvdG9rZW4nXTsgLy8g5Zyo55m95ZCN5Y2V5Lit55qE5Yik5pat5oOF5Ya1CiAgICAgICAgICAgIC8vIOS/ruaUuee9kemhteagh+etvuWQjeensAoKICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBnZXRQYWdlVGl0bGUodG8ubWV0YS50aXRsZSk7CgogICAgICAgICAgICBpZiAoISh3aGl0ZUxpc3QuaW5kZXhPZih0by5uYW1lKSA+IC0xKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodG9rZW4pIHsKICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgIG5hbWU6IHN0b3JlLmdldHRlcnNbJ3VzZXIvdXNlckluZm8nXS5hdXRob3JpdHkuZGVmYXVsdFJvdXRlcgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGlmICghdG9rZW4pIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghKCFhc3luY1JvdXRlckZsYWcgJiYgc3RvcmUuZ2V0dGVyc1sncm91dGVyL2FzeW5jUm91dGVycyddLmxlbmd0aCA9PT0gMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGFzeW5jUm91dGVyRmxhZysrOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgncm91dGVyL1NldEFzeW5jUm91dGVyJyk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgYXN5bmNSb3V0ZXJzID0gc3RvcmUuZ2V0dGVyc1sncm91dGVyL2FzeW5jUm91dGVycyddOwogICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFzeW5jUm91dGVycyk7CiAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgaWYgKHRvLm1hdGNoZWQubGVuZ3RoKSB7CiAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgICAgcGF0aDogJy9sYXlvdXQvNDA0JwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgLy8g5LiN5Zyo55m95ZCN5Y2V5Lit5bm25LiU5pyq55m76ZmG55qE5pe25YCZCiAgICAgICAgICAgIGlmICghdG9rZW4pIHsKICAgICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICAgIG5hbWU6ICdMb2dpbicsCiAgICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgICByZWRpcmVjdDogZG9jdW1lbnQubG9jYXRpb24uaGFzaAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7"},{"version":3,"sources":["E:/临时文件夹/console/web/src/permission.js"],"names":["router","store","getPageTitle","asyncRouterFlag","whiteList","beforeEach","to","from","next","token","getters","document","title","meta","indexOf","name","authority","defaultRouter","length","dispatch","asyncRouters","addRoutes","replace","matched","path","query","redirect","location","hash"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,IAAIC,eAAe,GAAG,CAAtB;AAEA,IAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,MAAV,CAAlB;AACAJ,MAAM,CAACK,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,KADU,GACFR,KAAK,CAACS,OAAN,CAAc,YAAd,CADE,EAEhB;AACA;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACI,EAAE,CAACO,IAAH,CAAQD,KAAT,CAA7B;;AAJgB,kBAKZR,SAAS,CAACU,OAAV,CAAkBR,EAAE,CAACS,IAArB,IAA6B,CAAC,CALlB;AAAA;AAAA;AAAA;;AAMd,gBAAIN,KAAJ,EAAW;AACTD,cAAAA,IAAI,CAAC;AAAEO,gBAAAA,IAAI,EAAEd,KAAK,CAACS,OAAN,CAAc,eAAd,EAA+BM,SAA/B,CAAyCC;AAAjD,eAAD,CAAJ;AACD,aAFD,MAEO;AACLT,cAAAA,IAAI;AACL;;AAVa;AAAA;;AAAA;AAAA,iBAaVC,KAbU;AAAA;AAAA;AAAA;;AAAA,kBAeR,CAACN,eAAD,IAAoBF,KAAK,CAACS,OAAN,CAAc,qBAAd,EAAqCQ,MAArC,KAAgD,CAf5D;AAAA;AAAA;AAAA;;AAgBVf,YAAAA,eAAe;AAhBL;AAAA,mBAiBJF,KAAK,CAACkB,QAAN,CAAe,uBAAf,CAjBI;;AAAA;AAkBJC,YAAAA,YAlBI,GAkBWnB,KAAK,CAACS,OAAN,CAAc,qBAAd,CAlBX;AAmBVV,YAAAA,MAAM,CAACqB,SAAP,CAAiBD,YAAjB;AACAZ,YAAAA,IAAI,iCAAMF,EAAN;AAAUgB,cAAAA,OAAO,EAAE;AAAnB,eAAJ;AApBU;AAAA;;AAAA;AAsBV,gBAAIhB,EAAE,CAACiB,OAAH,CAAWL,MAAf,EAAuB;AACrBV,cAAAA,IAAI;AACL,aAFD,MAEO;AACLA,cAAAA,IAAI,CAAC;AAAEgB,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAJ;AACD;;AA1BS;AA6Bd;AACA,gBAAI,CAACf,KAAL,EAAY;AACVD,cAAAA,IAAI,CAAC;AACHO,gBAAAA,IAAI,EAAE,OADH;AAEHU,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,QAAQ,EAAEf,QAAQ,CAACgB,QAAT,CAAkBC;AADvB;AAFJ,eAAD,CAAJ;AAMD;;AArCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import router from './router'\nimport { store } from '@/store'\nimport getPageTitle from '@/utils/page'\n\nlet asyncRouterFlag = 0\n\nconst whiteList = ['Login', 'Init']\nrouter.beforeEach(async(to, from, next) => {\n  const token = store.getters['user/token']\n  // 在白名单中的判断情况\n  // 修改网页标签名称\n  document.title = getPageTitle(to.meta.title)\n  if (whiteList.indexOf(to.name) > -1) {\n    if (token) {\n      next({ name: store.getters['user/userInfo'].authority.defaultRouter })\n    } else {\n      next()\n    }\n  } else {\n    // 不在白名单中并且已经登陆的时候\n    if (token) {\n      // 添加flag防止多次获取动态路由和栈溢出\n      if (!asyncRouterFlag && store.getters['router/asyncRouters'].length === 0) {\n        asyncRouterFlag++\n        await store.dispatch('router/SetAsyncRouter')\n        const asyncRouters = store.getters['router/asyncRouters']\n        router.addRoutes(asyncRouters)\n        next({ ...to, replace: true })\n      } else {\n        if (to.matched.length) {\n          next()\n        } else {\n          next({ path: '/layout/404' })\n        }\n      }\n    }\n    // 不在白名单中并且未登陆的时候\n    if (!token) {\n      next({\n        name: 'Login',\n        query: {\n          redirect: document.location.hash\n        }\n      })\n    }\n  }\n})\n"]}]}