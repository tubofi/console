{"remainingRequest":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\superAdmin\\menu\\menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\console\\web\\src\\view\\superAdmin\\menu\\menu.vue","mtime":1625854608000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["menu.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"button-box clearflex\">\n      <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"addMenu('0')\">新增根菜单</el-button>\n    </div>\n\n    <!-- 由于此处菜单跟左侧列表一一对应所以不需要分页 pageSize默认999 -->\n    <el-table :data=\"tableData\" border row-key=\"ID\" stripe>\n      <el-table-column label=\"ID\" min-width=\"100\" prop=\"ID\" />\n      <el-table-column label=\"路由Name\" min-width=\"160\" prop=\"name\" />\n      <el-table-column label=\"路由Path\" min-width=\"160\" prop=\"path\" />\n      <el-table-column label=\"是否隐藏\" min-width=\"100\" prop=\"hidden\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.hidden?\"隐藏\":\"显示\" }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"父节点\" min-width=\"90\" prop=\"parentId\" />\n      <el-table-column label=\"排序\" min-width=\"70\" prop=\"sort\" />\n      <el-table-column label=\"文件路径\" min-width=\"360\" prop=\"component\" />\n      <el-table-column label=\"展示名称\" min-width=\"120\" prop=\"authorityName\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.meta.title }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"图标\" min-width=\"140\" prop=\"authorityName\">\n        <template slot-scope=\"scope\">\n          <i :class=\"`el-icon-${scope.row.meta.icon}`\" />\n          <span>{{ scope.row.meta.icon }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            @click=\"addMenu(scope.row.ID)\"\n          >添加子菜单</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            @click=\"editMenu(scope.row.ID)\"\n          >编辑</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            @click=\"deleteMenu(scope.row.ID)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :before-close=\"handleClose\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        ref=\"menuForm\"\n        :inline=\"true\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-position=\"top\"\n        label-width=\"85px\"\n      >\n        <el-form-item label=\"路由name\" prop=\"path\" style=\"width:30%\">\n          <el-input\n            v-model=\"form.name\"\n            autocomplete=\"off\"\n            placeholder=\"唯一英文字符串\"\n            @change=\"changeName\"\n          />\n        </el-form-item>\n        <el-form-item prop=\"path\" style=\"width:30%\">\n          <div slot=\"label\" style=\"display:inline-block\">\n            路由path\n            <el-checkbox v-model=\"checkFlag\" style=\"float:right;margin-left:20px;\">添加参数</el-checkbox>\n          </div>\n          <el-input\n            v-model=\"form.path\"\n            :disabled=\"!checkFlag\"\n            autocomplete=\"off\"\n            placeholder=\"建议只在后方拼接参数\"\n          />\n        </el-form-item>\n        <el-form-item label=\"是否隐藏\" style=\"width:30%\">\n          <el-select v-model=\"form.hidden\" placeholder=\"是否在列表隐藏\">\n            <el-option :value=\"false\" label=\"否\" />\n            <el-option :value=\"true\" label=\"是\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"父节点Id\" style=\"width:30%\">\n          <el-cascader\n            v-model=\"form.parentId\"\n            :disabled=\"!isEdit\"\n            :options=\"menuOption\"\n            :props=\"{ checkStrictly: true,label:'title',value:'ID',disabled:'disabled',emitPath:false}\"\n            :show-all-levels=\"false\"\n            filterable\n          />\n        </el-form-item>\n        <el-form-item label=\"文件路径\" prop=\"component\" style=\"width:60%\">\n          <el-input v-model=\"form.component\" autocomplete=\"off\" />\n          <span style=\"font-size:12px;margin-right:12px;\">如果菜单包含子菜单，请创建router-view二级路由页面或者</span><el-button size=\"mini\" @click=\"form.component = 'view/routerHolder.vue'\">点我设置</el-button>\n        </el-form-item>\n        <el-form-item label=\"展示名称\" prop=\"meta.title\" style=\"width:30%\">\n          <el-input v-model=\"form.meta.title\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item label=\"图标\" prop=\"meta.icon\" style=\"width:30%\">\n          <icon :meta=\"form.meta\">\n            <template slot=\"prepend\">el-icon-</template>\n          </icon>\n        </el-form-item>\n        <el-form-item label=\"排序标记\" prop=\"sort\" style=\"width:30%\">\n          <el-input v-model.number=\"form.sort\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item label=\"keepAlive\" prop=\"meta.keepAlive\" style=\"width:30%\">\n          <el-select v-model=\"form.meta.keepAlive\" placeholder=\"是否keepAlive缓存页面\">\n            <el-option :value=\"false\" label=\"否\" />\n            <el-option :value=\"true\" label=\"是\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"closeTab\" prop=\"meta.closeTab\" style=\"width:30%\">\n          <el-select v-model=\"form.meta.closeTab\" placeholder=\"是否自动关闭tab\">\n            <el-option :value=\"false\" label=\"否\" />\n            <el-option :value=\"true\" label=\"是\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div class=\"warning\">新增菜单需要在角色管理内配置权限才可使用</div>\n      <div>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          icon=\"el-icon-edit\"\n          @click=\"addParameter(form)\"\n        >新增菜单参数</el-button>\n        <el-table :data=\"form.parameters\" stripe style=\"width: 100%\">\n          <el-table-column prop=\"type\" label=\"参数类型\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.type\" placeholder=\"请选择\">\n                <el-option key=\"query\" value=\"query\" label=\"query\" />\n                <el-option key=\"params\" value=\"params\" label=\"params\" />\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"key\" label=\"参数key\" width=\"180\">\n            <template slot-scope=\"scope\">\n              <div>\n                <el-input v-model=\"scope.row.key\" />\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"value\" label=\"参数值\">\n            <template slot-scope=\"scope\">\n              <div>\n                <el-input v-model=\"scope.row.value\" />\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column>\n            <template slot-scope=\"scope\">\n              <div>\n                <el-button\n                  type=\"danger\"\n                  size=\"small\"\n                  icon=\"el-icon-delete\"\n                  @click=\"deleteParameter(form.parameters,scope.$index)\"\n                >删除</el-button>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"enterDialog\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成\n\nimport {\n  updateBaseMenu,\n  getMenuList,\n  addBaseMenu,\n  deleteBaseMenu,\n  getBaseMenuById\n} from '@/api/menu'\nimport infoList from '@/mixins/infoList'\nimport icon from '@/view/superAdmin/menu/icon'\nexport default {\n  name: 'Menus',\n  components: {\n    icon\n  },\n  mixins: [infoList],\n  data() {\n    return {\n      checkFlag: false,\n      listApi: getMenuList,\n      dialogFormVisible: false,\n      dialogTitle: '新增菜单',\n      menuOption: [\n        {\n          ID: '0',\n          title: '根菜单'\n        }\n      ],\n      form: {\n        ID: 0,\n        path: '',\n        name: '',\n        hidden: '',\n        parentId: '',\n        component: '',\n        meta: {\n          title: '',\n          icon: '',\n          defaultMenu: false,\n          closeTab: false,\n          keepAlive: false\n        },\n        parameters: []\n      },\n      rules: {\n        path: [{ required: true, message: '请输入菜单name', trigger: 'blur' }],\n        component: [\n          { required: true, message: '请输入文件路径', trigger: 'blur' }\n        ],\n        'meta.title': [\n          { required: true, message: '请输入菜单展示名称', trigger: 'blur' }\n        ]\n      },\n      isEdit: false,\n      test: ''\n    }\n  },\n  async created() {\n    this.pageSize = 999\n    await this.getTableData()\n  },\n  methods: {\n    addParameter(form) {\n      if (!form.parameters) {\n        this.$set(form, 'parameters', [])\n      }\n      form.parameters.push({\n        type: 'query',\n        key: '',\n        value: ''\n      })\n    },\n    deleteParameter(parameters, index) {\n      parameters.splice(index, 1)\n    },\n    changeName() {\n      this.form.path = this.form.name\n    },\n    setOptions() {\n      this.menuOption = [\n        {\n          ID: '0',\n          title: '根目录'\n        }\n      ]\n      this.setMenuOptions(this.tableData, this.menuOption, false)\n    },\n    setMenuOptions(menuData, optionsData, disabled) {\n      menuData &&\n        menuData.map(item => {\n          if (item.children && item.children.length) {\n            const option = {\n              title: item.meta.title,\n              ID: String(item.ID),\n              disabled: disabled || item.ID === this.form.ID,\n              children: []\n            }\n            this.setMenuOptions(\n              item.children,\n              option.children,\n              disabled || item.ID === this.form.ID\n            )\n            optionsData.push(option)\n          } else {\n            const option = {\n              title: item.meta.title,\n              ID: String(item.ID),\n              disabled: disabled || item.ID === this.form.ID\n            }\n            optionsData.push(option)\n          }\n        })\n    },\n    handleClose(done) {\n      this.initForm()\n      done()\n    },\n    // 懒加载子菜单\n    load(tree, treeNode, resolve) {\n      resolve([\n        {\n          id: 31,\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        },\n        {\n          id: 32,\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1519 弄'\n        }\n      ])\n    },\n    // 删除菜单\n    deleteMenu(ID) {\n      this.$confirm('此操作将永久删除所有角色下该菜单, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          const res = await deleteBaseMenu({ ID })\n          if (res.code === 0) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            })\n            if (this.tableData.length === 1 && this.page > 1) {\n              this.page--\n            }\n            this.getTableData()\n          }\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n    },\n    // 初始化弹窗内表格方法\n    initForm() {\n      this.checkFlag = false\n      this.$refs.menuForm.resetFields()\n      this.form = {\n        ID: 0,\n        path: '',\n        name: '',\n        hidden: '',\n        parentId: '',\n        component: '',\n        meta: {\n          title: '',\n          icon: '',\n          defaultMenu: false,\n          keepAlive: ''\n        }\n      }\n    },\n    // 关闭弹窗\n    closeDialog() {\n      this.initForm()\n      this.dialogFormVisible = false\n    },\n    // 添加menu\n    async enterDialog() {\n      this.$refs.menuForm.validate(async valid => {\n        if (valid) {\n          let res\n          if (this.isEdit) {\n            res = await updateBaseMenu(this.form)\n          } else {\n            res = await addBaseMenu(this.form)\n          }\n          if (res.code === 0) {\n            this.$message({\n              type: 'success',\n              message: this.isEdit ? '编辑成功' : '添加成功!'\n            })\n            this.getTableData()\n          }\n          this.initForm()\n          this.dialogFormVisible = false\n        }\n      })\n    },\n    // 添加菜单方法，id为 0则为添加根菜单\n    addMenu(id) {\n      this.dialogTitle = '新增菜单'\n      this.form.parentId = String(id)\n      this.isEdit = false\n      this.setOptions()\n      this.dialogFormVisible = true\n    },\n    // 修改菜单方法\n    async editMenu(id) {\n      this.dialogTitle = '编辑菜单'\n      const res = await getBaseMenuById({ id })\n      this.form = res.data.menu\n      this.isEdit = true\n      this.setOptions()\n      this.dialogFormVisible = true\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.button-box {\n  padding: 10px 20px;\n  .el-button {\n    float: right;\n  }\n}\n.warning {\n  color: #dc143c;\n}\n</style>\n"],"sourceRoot":"src/view/superAdmin/menu"}]}