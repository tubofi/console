{"remainingRequest":"E:\\临时\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\临时\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\临时\\console\\web\\src\\view\\system\\state.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\临时\\console\\web\\src\\view\\system\\state.vue","mtime":1625854608000},{"path":"E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovXHU0RTM0XHU2NUY2L2NvbnNvbGUvd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0U3lzdGVtU3RhdGUgfSBmcm9tICdAL2FwaS9zeXN0ZW0nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1N0YXRlJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGltZXI6IG51bGwsCiAgICAgIHN0YXRlOiB7fSwKICAgICAgY29sb3JzOiBbewogICAgICAgIGNvbG9yOiAnIzVjYjg3YScsCiAgICAgICAgcGVyY2VudGFnZTogMjAKICAgICAgfSwgewogICAgICAgIGNvbG9yOiAnI2U2YTIzYycsCiAgICAgICAgcGVyY2VudGFnZTogNDAKICAgICAgfSwgewogICAgICAgIGNvbG9yOiAnI2Y1NmM2YycsCiAgICAgICAgcGVyY2VudGFnZTogODAKICAgICAgfV0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnJlbG9hZCgpOwogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMucmVsb2FkKCk7CiAgICB9LCAxMDAwICogMTApOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgICB0aGlzLnRpbWVyID0gbnVsbDsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbG9hZDogZnVuY3Rpb24gcmVsb2FkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRnZXRTeXN0ZW1TdGF0ZSwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U3lzdGVtU3RhdGUoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJGdldFN5c3RlbVN0YXRlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkZ2V0U3lzdGVtU3RhdGUuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzMi5zdGF0ZSA9IGRhdGEuc2VydmVyOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["state.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA,SAAA,cAAA,QAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAHA;AAHA,KAAA;AASA,GAZA;AAaA,EAAA,OAbA,qBAaA;AAAA;;AACA,SAAA,MAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,MAAA;AACA,KAFA,EAEA,OAAA,EAFA,CAAA;AAGA,GAlBA;AAmBA,EAAA,aAnBA,2BAmBA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,cAAA,EADA;;AAAA;AAAA;AACA,gBAAA,IADA,yBACA,IADA;AAEA,gBAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAvBA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"15\" class=\"system_state\">\n      <el-col :span=\"12\">\n        <el-card v-if=\"state.os\" class=\"card_item\">\n          <div slot=\"header\">Runtime</div>\n          <div>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">os:</el-col>\n              <el-col :span=\"12\" v-text=\"state.os.goos\" />\n            </el-row>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">cpu nums:</el-col>\n              <el-col :span=\"12\" v-text=\"state.os.numCpu\" />\n            </el-row>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">compiler:</el-col>\n              <el-col :span=\"12\" v-text=\"state.os.compiler\" />\n            </el-row>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">go version:</el-col>\n              <el-col :span=\"12\" v-text=\"state.os.goVersion\" />\n            </el-row>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">goroutine nums:</el-col>\n              <el-col :span=\"12\" v-text=\"state.os.numGoroutine\" />\n            </el-row>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card v-if=\"state.disk\" class=\"card_item\">\n          <div slot=\"header\">Disk</div>\n          <div>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">total (MB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.disk.totalMb\" />\n                </el-row>\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">used (MB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.disk.usedMb\" />\n                </el-row>\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">total (GB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.disk.totalGb\" />\n                </el-row>\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">used (GB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.disk.usedGb\" />\n                </el-row>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-progress\n                  type=\"dashboard\"\n                  :percentage=\"state.disk.usedPercent\"\n                  :color=\"colors\"\n                />\n              </el-col>\n            </el-row>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"15\" class=\"system_state\">\n      <el-col :span=\"12\">\n        <el-card\n          v-if=\"state.cpu\"\n          class=\"card_item\"\n          :body-style=\"{ height: '180px', 'overflow-y': 'scroll' }\"\n        >\n          <div slot=\"header\">CPU</div>\n          <div>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">physical number of cores:</el-col>\n              <el-col :span=\"12\" v-text=\"state.cpu.cores\" />\n            </el-row>\n            <template v-for=\"(item, index) in state.cpu.cpus\">\n              <el-row :key=\"index\" :gutter=\"10\">\n                <el-col :span=\"12\">core {{ index }}:</el-col>\n                <el-col\n                  :span=\"12\"\n                ><el-progress\n                  type=\"line\"\n                  :percentage=\"+item.toFixed(0)\"\n                  :color=\"colors\"\n                /></el-col>\n              </el-row>\n            </template>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card v-if=\"state.ram\" class=\"card_item\">\n          <div slot=\"header\">Ram</div>\n          <div>\n            <el-row :gutter=\"10\">\n              <el-col :span=\"12\">\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">total (MB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.ram.totalMb\" />\n                </el-row>\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">used (MB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.ram.usedMb\" />\n                </el-row>\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">total (GB)</el-col>\n                  <el-col :span=\"12\" v-text=\"state.ram.totalMb / 1024\" />\n                </el-row>\n                <el-row :gutter=\"10\">\n                  <el-col :span=\"12\">used (GB)</el-col>\n                  <el-col\n                    :span=\"12\"\n                    v-text=\"(state.ram.usedMb / 1024).toFixed(2)\"\n                  />\n                </el-row>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-progress\n                  type=\"dashboard\"\n                  :percentage=\"state.ram.usedPercent\"\n                  :color=\"colors\"\n                />\n              </el-col>\n            </el-row>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { getSystemState } from '@/api/system'\nexport default {\n  name: 'State',\n  data() {\n    return {\n      timer: null,\n      state: {},\n      colors: [\n        { color: '#5cb87a', percentage: 20 },\n        { color: '#e6a23c', percentage: 40 },\n        { color: '#f56c6c', percentage: 80 }\n      ]\n    }\n  },\n  created() {\n    this.reload()\n    this.timer = setInterval(() => {\n      this.reload()\n    }, 1000 * 10)\n  },\n  beforeDestroy() {\n    clearInterval(this.timer)\n    this.timer = null\n  },\n  methods: {\n    async reload() {\n      const { data } = await getSystemState()\n      this.state = data.server\n    }\n  }\n}\n</script>\n\n<style>\n.system_state {\n  padding: 10px;\n}\n\n.card_item {\n  height: 280px;\n}\n</style>\n"],"sourceRoot":"src/view/system"}]}