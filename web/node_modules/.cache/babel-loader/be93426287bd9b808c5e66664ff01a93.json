{"remainingRequest":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\console\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\console\\web\\src\\store\\module\\dictionary.js","dependencies":[{"path":"E:\\console\\web\\src\\store\\module\\dictionary.js","mtime":1625854608000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovY29uc29sZS93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJFOi9jb25zb2xlL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCB7IGZpbmRTeXNEaWN0aW9uYXJ5IH0gZnJvbSAnQC9hcGkvc3lzRGljdGlvbmFyeSc7CmV4cG9ydCB2YXIgZGljdGlvbmFyeSA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBkaWN0aW9uYXJ5TWFwOiB7fQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXREaWN0aW9uYXJ5TWFwOiBmdW5jdGlvbiBzZXREaWN0aW9uYXJ5TWFwKHN0YXRlLCBkaWN0aW9uYXJ5TWFwKSB7CiAgICAgIHN0YXRlLmRpY3Rpb25hcnlNYXAgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLmRpY3Rpb25hcnlNYXApLCBkaWN0aW9uYXJ5TWFwKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8vIOS7juWQjuWPsOiOt+WPluWKqOaAgei3r+eUsQogICAgZ2V0RGljdGlvbmFyeTogZnVuY3Rpb24gZ2V0RGljdGlvbmFyeShfcmVmLCB0eXBlKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgc3RhdGUsIHJlcywgZGljdGlvbmFyeU1hcCwgZGljdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgc3RhdGUgPSBfcmVmLnN0YXRlOwoKICAgICAgICAgICAgICAgIGlmICghc3RhdGUuZGljdGlvbmFyeU1hcFt0eXBlXSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgc3RhdGUuZGljdGlvbmFyeU1hcFt0eXBlXSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIGZpbmRTeXNEaWN0aW9uYXJ5KHsKICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzLmNvZGUgPT09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZGljdGlvbmFyeU1hcCA9IHt9OwogICAgICAgICAgICAgICAgZGljdCA9IFtdOwogICAgICAgICAgICAgICAgcmVzLmRhdGEucmVzeXNEaWN0aW9uYXJ5LnN5c0RpY3Rpb25hcnlEZXRhaWxzICYmIHJlcy5kYXRhLnJlc3lzRGljdGlvbmFyeS5zeXNEaWN0aW9uYXJ5RGV0YWlscy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgZGljdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogaXRlbS5sYWJlbCwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgZGljdGlvbmFyeU1hcFtyZXMuZGF0YS5yZXN5c0RpY3Rpb25hcnkudHlwZV0gPSBkaWN0OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXREaWN0aW9uYXJ5TWFwJywgZGljdGlvbmFyeU1hcCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5kaWN0aW9uYXJ5TWFwW3R5cGVdKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldERpY3Rpb25hcnk6IGZ1bmN0aW9uIGdldERpY3Rpb25hcnkoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmRpY3Rpb25hcnlNYXA7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["E:/console/web/src/store/module/dictionary.js"],"names":["findSysDictionary","dictionary","namespaced","state","dictionaryMap","mutations","setDictionaryMap","actions","getDictionary","type","commit","res","code","dict","data","resysDictionary","sysDictionaryDetails","map","item","push","label","value","getters"],"mappings":";;;;AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,UAAU,EAAE,IADY;AAExBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV,GAFiB;AAKxBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,gBADS,4BACQH,KADR,EACeC,aADf,EAC8B;AACrCD,MAAAA,KAAK,CAACC,aAAN,mCAA2BD,KAAK,CAACC,aAAjC,GAAmDA,aAAnD;AACD;AAHQ,GALa;AAWxBG,EAAAA,OAAO,EAAE;AACP;AACMC,IAAAA,aAFC,+BAEgCC,IAFhC,EAEsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBC,gBAAAA,MAAuB,QAAvBA,MAAuB,EAAfP,KAAe,QAAfA,KAAe;;AAAA,qBACvCA,KAAK,CAACC,aAAN,CAAoBK,IAApB,CADuC;AAAA;AAAA;AAAA;;AAAA,iDAElCN,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAFkC;;AAAA;AAAA;AAAA,uBAIvBT,iBAAiB,CAAC;AAAES,kBAAAA,IAAI,EAAJA;AAAF,iBAAD,CAJM;;AAAA;AAInCE,gBAAAA,GAJmC;;AAAA,sBAKrCA,GAAG,CAACC,IAAJ,KAAa,CALwB;AAAA;AAAA;AAAA;;AAMjCR,gBAAAA,aANiC,GAMjB,EANiB;AAOjCS,gBAAAA,IAPiC,GAO1B,EAP0B;AAQvCF,gBAAAA,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,IAAiDL,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,CAA8CC,GAA9C,CAAkD,UAAAC,IAAI,EAAI;AACzGL,kBAAAA,IAAI,CAACM,IAAL,CAAU;AACRC,oBAAAA,KAAK,EAAEF,IAAI,CAACE,KADJ;AAERC,oBAAAA,KAAK,EAAEH,IAAI,CAACG;AAFJ,mBAAV;AAID,iBALgD,CAAjD;AAMAjB,gBAAAA,aAAa,CAACO,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBN,IAA1B,CAAb,GAA+CI,IAA/C;AACAH,gBAAAA,MAAM,CAAC,kBAAD,EAAqBN,aAArB,CAAN;AAfuC,iDAgBhCD,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAhBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB5C;AArBM,GAXe;AAkCxBa,EAAAA,OAAO,EAAE;AACPd,IAAAA,aADO,yBACOL,KADP,EACc;AACnB,aAAOA,KAAK,CAACC,aAAb;AACD;AAHM;AAlCe,CAAnB","sourcesContent":["import { findSysDictionary } from '@/api/sysDictionary'\n\nexport const dictionary = {\n  namespaced: true,\n  state: {\n    dictionaryMap: {}\n  },\n  mutations: {\n    setDictionaryMap(state, dictionaryMap) {\n      state.dictionaryMap = { ...state.dictionaryMap, ...dictionaryMap }\n    }\n\n  },\n  actions: {\n    // 从后台获取动态路由\n    async getDictionary({ commit, state }, type) {\n      if (state.dictionaryMap[type]) {\n        return state.dictionaryMap[type]\n      } else {\n        const res = await findSysDictionary({ type })\n        if (res.code === 0) {\n          const dictionaryMap = {}\n          const dict = []\n          res.data.resysDictionary.sysDictionaryDetails && res.data.resysDictionary.sysDictionaryDetails.map(item => {\n            dict.push({\n              label: item.label,\n              value: item.value\n            })\n          })\n          dictionaryMap[res.data.resysDictionary.type] = dict\n          commit('setDictionaryMap', dictionaryMap)\n          return state.dictionaryMap[type]\n        }\n      }\n    }\n  },\n  getters: {\n    getDictionary(state) {\n      return state.dictionaryMap\n    }\n  }\n}\n"]}]}