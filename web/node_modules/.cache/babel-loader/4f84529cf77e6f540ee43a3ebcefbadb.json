{"remainingRequest":"E:\\临时\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\临时\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\临时\\console\\web\\src\\view\\systemTools\\autoCode\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\临时\\console\\web\\src\\view\\systemTools\\autoCode\\index.vue","mtime":1625854608000},{"path":"E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 从数据库直接获取字段 -->\n    <el-collapse v-model=\"activeNames\">\n      <el-collapse-item name=\"1\">\n        <template slot=\"title\">\n          <div :style=\"{fontSize:'16px',paddingLeft:'20px'}\">\n            点这里从现有数据库创建代码\n            <i class=\"header-icon el-icon-thumb\" />\n          </div>\n        </template>\n        <el-form ref=\"getTableForm\" :inline=\"true\" :model=\"dbform\" label-width=\"120px\">\n          <el-form-item label=\"数据库名\" prop=\"structName\">\n            <el-select v-model=\"dbform.dbName\" filterable placeholder=\"请选择数据库\" @change=\"getTable\">\n              <el-option\n                v-for=\"item in dbOptions\"\n                :key=\"item.database\"\n                :label=\"item.database\"\n                :value=\"item.database\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"表名\" prop=\"structName\">\n            <el-select\n              v-model=\"dbform.tableName\"\n              :disabled=\"!dbform.dbName\"\n              filterable\n              placeholder=\"请选择表\"\n            >\n              <el-option\n                v-for=\"item in tableOptions\"\n                :key=\"item.tableName\"\n                :label=\"item.tableName\"\n                :value=\"item.tableName\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button size=\"mini\" type=\"primary\" @click=\"getColumn\">使用此表创建</el-button>\n          </el-form-item>\n        </el-form>\n      </el-collapse-item>\n    </el-collapse>\n\n    <el-divider />\n    <!-- 初始版本自动化代码工具 -->\n    <el-form ref=\"autoCodeForm\" :rules=\"rules\" :model=\"form\" label-width=\"120px\" :inline=\"true\">\n      <el-form-item label=\"Struct名称\" prop=\"structName\">\n        <el-input v-model=\"form.structName\" placeholder=\"首字母自动转换大写\" />\n      </el-form-item>\n      <el-form-item label=\"tableName\" prop=\"tableName\">\n        <el-input v-model=\"form.tableName\" placeholder=\"指定表名（非必填）\" />\n      </el-form-item>\n      <el-form-item label=\"Struct简称\" prop=\"abbreviation\">\n        <el-input v-model=\"form.abbreviation\" placeholder=\"简称会作为入参对象名和路由group\" />\n      </el-form-item>\n      <el-form-item label=\"Struct中文名称\" prop=\"description\">\n        <el-input v-model=\"form.description\" placeholder=\"中文描述作为自动api描述\" />\n      </el-form-item>\n      <el-form-item label=\"文件名称\" prop=\"packageName\">\n        <el-input v-model=\"form.packageName\" placeholder=\"生成文件的默认名称(建议为驼峰格式,首字母小写,如sysXxxXxxx)\" />\n      </el-form-item>\n      <el-form-item>\n        <template slot=\"label\">\n          <el-tooltip content=\"注：把自动生成的API注册进数据库\" placement=\"bottom\" effect=\"light\">\n            <div> 自动创建API </div>\n          </el-tooltip>\n        </template>\n        <el-checkbox v-model=\"form.autoCreateApiToSql\" />\n      </el-form-item>\n      <el-form-item>\n        <template slot=\"label\">\n          <el-tooltip content=\"注：自动迁移生成的文件到ymal配置的对应位置\" placement=\"bottom\" effect=\"light\">\n            <div> 自动移动文件 </div>\n          </el-tooltip>\n        </template>\n        <el-checkbox v-model=\"form.autoMoveFile\" />\n      </el-form-item>\n    </el-form>\n    <!-- 组件列表 -->\n    <div class=\"button-box clearflex\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"editAndAddField()\">新增Field</el-button>\n    </div>\n    <el-table :data=\"form.fields\" border stripe>\n      <el-table-column type=\"index\" label=\"序列\" width=\"100\" />\n      <el-table-column prop=\"fieldName\" label=\"Field名\" />\n      <el-table-column prop=\"fieldDesc\" label=\"中文名\" />\n      <el-table-column prop=\"fieldJson\" label=\"FieldJson\" />\n      <el-table-column prop=\"fieldType\" label=\"Field数据类型\" width=\"130\" />\n      <el-table-column prop=\"dataType\" label=\"数据库字段类型\" width=\"130\" />\n      <el-table-column prop=\"dataTypeLong\" label=\"数据库字段长度\" width=\"130\" />\n      <el-table-column prop=\"columnName\" label=\"数据库字段\" width=\"130\" />\n      <el-table-column prop=\"comment\" label=\"数据库字段描述\" width=\"130\" />\n      <el-table-column prop=\"fieldSearchType\" label=\"搜索条件\" width=\"130\" />\n      <el-table-column prop=\"dictType\" label=\"字典\" width=\"130\" />\n      <el-table-column label=\"操作\" width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            @click=\"editAndAddField(scope.row)\"\n          >编辑</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            :disabled=\"scope.$index === 0\"\n            @click=\"moveUpField(scope.$index)\"\n          >上移</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            :disabled=\"(scope.$index + 1) === form.fields.length\"\n            @click=\"moveDownField(scope.$index)\"\n          >下移</el-button>\n          <el-popover v-model=\"scope.row.visible\" placement=\"top\">\n            <p>确定删除吗？</p>\n            <div style=\"text-align: right; margin: 0\">\n              <el-button size=\"mini\" type=\"text\" @click=\"scope.row.visible = false\">取消</el-button>\n              <el-button type=\"primary\" size=\"mini\" @click=\"deleteField(scope.$index)\">确定</el-button>\n            </div>\n            <el-button slot=\"reference\" size=\"mini\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\n          </el-popover>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-tag type=\"danger\">id , created_at , updated_at , deleted_at 会自动生成请勿重复创建</el-tag>\n    <!-- 组件列表 -->\n    <div class=\"button-box clearflex\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"enterForm(true)\">预览代码</el-button>\n      <el-button size=\"mini\" type=\"primary\" @click=\"enterForm(false)\">生成代码</el-button>\n    </div>\n    <!-- 组件弹窗 -->\n    <el-dialog title=\"组件内容\" :visible.sync=\"dialogFlag\">\n      <FieldDialog v-if=\"dialogFlag\" ref=\"fieldDialog\" :dialog-middle=\"dialogMiddle\" />\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" @click=\"closeDialog\">取 消</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"enterDialog\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"previewFlag\">\n      <PreviewCodeDialg v-if=\"previewFlag\" :preview-code=\"preViewCode\" />\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"previewFlag = false\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nconst fieldTemplate = {\n  fieldName: '',\n  fieldDesc: '',\n  fieldType: '',\n  dataType: '',\n  fieldJson: '',\n  columnName: '',\n  dataTypeLong: '',\n  comment: '',\n  fieldSearchType: '',\n  dictType: ''\n}\n\nimport FieldDialog from '@/view/systemTools/autoCode/component/fieldDialog.vue'\nimport PreviewCodeDialg from '@/view/systemTools/autoCode/component/previewCodeDialg.vue'\nimport { toUpperCase, toHump, toSQLLine } from '@/utils/stringFun'\nimport { createTemp, getDB, getTable, getColumn, preview } from '@/api/autoCode'\nimport { getDict } from '@/utils/dictionary'\n\nexport default {\n  name: 'AutoCode',\n  components: {\n    FieldDialog,\n    PreviewCodeDialg\n  },\n  data() {\n    return {\n      activeNames: [''],\n      preViewCode: {},\n      dbform: {\n        dbName: '',\n        tableName: ''\n      },\n      dbOptions: [],\n      tableOptions: [],\n      addFlag: '',\n      fdMap: {},\n      form: {\n        structName: '',\n        tableName: '',\n        packageName: '',\n        abbreviation: '',\n        description: '',\n        autoCreateApiToSql: false,\n        autoMoveFile: false,\n        fields: []\n      },\n      rules: {\n        structName: [\n          { required: true, message: '请输入结构体名称', trigger: 'blur' }\n        ],\n        abbreviation: [\n          { required: true, message: '请输入结构体简称', trigger: 'blur' }\n        ],\n        description: [\n          { required: true, message: '请输入结构体描述', trigger: 'blur' }\n        ],\n        packageName: [\n          {\n            required: true,\n            message: '文件名称：sysXxxxXxxx',\n            trigger: 'blur'\n          }\n        ]\n      },\n      dialogMiddle: {},\n      bk: {},\n      dialogFlag: false,\n      previewFlag: false\n    }\n  },\n  created() {\n    this.getDb()\n    this.setFdMap()\n  },\n  methods: {\n    editAndAddField(item) {\n      this.dialogFlag = true\n      if (item) {\n        this.addFlag = 'edit'\n        this.bk = JSON.parse(JSON.stringify(item))\n        this.dialogMiddle = item\n      } else {\n        this.addFlag = 'add'\n        this.dialogMiddle = JSON.parse(JSON.stringify(fieldTemplate))\n      }\n    },\n    moveUpField(index) {\n      if (index === 0) {\n        return\n      }\n      const oldUpField = this.form.fields[index - 1]\n      this.form.fields.splice(index - 1, 1)\n      this.form.fields.splice(index, 0, oldUpField)\n    },\n    moveDownField(index) {\n      const fCount = this.form.fields.length\n      if (index === fCount - 1) {\n        return\n      }\n      const oldDownField = this.form.fields[index + 1]\n      this.form.fields.splice(index + 1, 1)\n      this.form.fields.splice(index, 0, oldDownField)\n    },\n    enterDialog() {\n      this.$refs.fieldDialog.$refs.fieldDialogFrom.validate(valid => {\n        if (valid) {\n          this.dialogMiddle.fieldName = toUpperCase(\n            this.dialogMiddle.fieldName\n          )\n          if (this.addFlag === 'add') {\n            this.form.fields.push(this.dialogMiddle)\n          }\n          this.dialogFlag = false\n        } else {\n          return false\n        }\n      })\n    },\n    closeDialog() {\n      if (this.addFlag === 'edit') {\n        this.dialogMiddle = this.bk\n      }\n      this.dialogFlag = false\n    },\n    deleteField(index) {\n      this.form.fields.splice(index, 1)\n    },\n    async enterForm(isPreview) {\n      if (this.form.fields.length <= 0) {\n        this.$message({\n          type: 'error',\n          message: '请填写至少一个field'\n        })\n        return false\n      }\n      if (\n        this.form.fields.some(item => item.fieldName === this.form.structName)\n      ) {\n        this.$message({\n          type: 'error',\n          message: '存在与结构体同名的字段'\n        })\n        return false\n      }\n      this.$refs.autoCodeForm.validate(async valid => {\n        if (valid) {\n          this.form.structName = toUpperCase(this.form.structName)\n          if (this.form.structName === this.form.abbreviation) {\n            this.$message({\n              type: 'error',\n              message: 'structName和struct简称不能相同'\n            })\n            return false\n          }\n          this.form.humpPackageName = toSQLLine(this.form.packageName)\n          debugger\n          if (isPreview) {\n            const data = await preview(this.form)\n            this.preViewCode = data.data.autoCode\n            this.previewFlag = true\n          } else {\n            const data = await createTemp(this.form)\n            if (data.headers?.success === 'false') {\n              return\n            } else {\n              this.$message({\n                type: 'success',\n                message: '自动化代码创建成功，正在下载'\n              })\n            }\n            const blob = new Blob([data])\n            const fileName = 'ginvueadmin.zip'\n            if ('download' in document.createElement('a')) {\n              // 不是IE浏览器\n              const url = window.URL.createObjectURL(blob)\n              const link = document.createElement('a')\n              link.style.display = 'none'\n              link.href = url\n              link.setAttribute('download', fileName)\n              document.body.appendChild(link)\n              link.click()\n              document.body.removeChild(link) // 下载完成移除元素\n              window.URL.revokeObjectURL(url) // 释放掉blob对象\n            } else {\n              // IE 10+\n              window.navigator.msSaveBlob(blob, fileName)\n            }\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    async getDb() {\n      const res = await getDB()\n      if (res.code === 0) {\n        this.dbOptions = res.data.dbs\n      }\n    },\n    async getTable() {\n      const res = await getTable({ dbName: this.dbform.dbName })\n      if (res.code === 0) {\n        this.tableOptions = res.data.tables\n      }\n      this.dbform.tableName = ''\n    },\n    async getColumn() {\n      const gormModelList = ['id', 'created_at', 'updated_at', 'deleted_at']\n      const res = await getColumn(this.dbform)\n      if (res.code === 0) {\n        const tbHump = toHump(this.dbform.tableName)\n        this.form.structName = toUpperCase(tbHump)\n        this.form.tableName = this.dbform.tableName\n        this.form.packageName = tbHump\n        this.form.abbreviation = tbHump\n        this.form.description = tbHump + '表'\n        this.form.autoCreateApiToSql = true\n        this.form.fields = []\n        res.data.columns &&\n          res.data.columns.map(item => {\n            if (!gormModelList.some(gormfd => gormfd === item.columnName)) {\n              const fbHump = toHump(item.columnName)\n              this.form.fields.push({\n                fieldName: toUpperCase(fbHump),\n                fieldDesc: item.columnComment || fbHump + '字段',\n                fieldType: this.fdMap[item.dataType],\n                dataType: item.dataType,\n                fieldJson: fbHump,\n                dataTypeLong: item.dataTypeLong,\n                columnName: item.columnName,\n                comment: item.columnComment,\n                fieldSearchType: '',\n                dictType: ''\n              })\n            }\n          })\n      }\n    },\n    async setFdMap() {\n      const fdTypes = ['string', 'int', 'bool', 'float64', 'time.Time']\n      fdTypes.map(async fdtype => {\n        const res = await getDict(fdtype)\n        res && res.map(item => {\n          this.fdMap[item.label] = fdtype\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.button-box {\n  padding: 10px 20px;\n  .el-button {\n    margin-right: 20px;\n    float: right;\n  }\n}\n</style>\n"],"sourceRoot":"src/view/systemTools/autoCode"}]}