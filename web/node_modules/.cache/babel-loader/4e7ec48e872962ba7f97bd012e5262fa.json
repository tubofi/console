{"remainingRequest":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js!E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\system\\state.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\console\\web\\src\\view\\system\\state.vue","mtime":1629645124118},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629645113861},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1629645113236},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629645113861},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1629645123321}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovY29uc29sZS93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXRTeXN0ZW1TdGF0ZSB9IGZyb20gJ0AvYXBpL3N5c3RlbSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU3RhdGUnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aW1lcjogbnVsbCwKICAgICAgc3RhdGU6IHt9LAogICAgICBjb2xvcnM6IFt7CiAgICAgICAgY29sb3I6ICcjNWNiODdhJywKICAgICAgICBwZXJjZW50YWdlOiAyMAogICAgICB9LCB7CiAgICAgICAgY29sb3I6ICcjZTZhMjNjJywKICAgICAgICBwZXJjZW50YWdlOiA0MAogICAgICB9LCB7CiAgICAgICAgY29sb3I6ICcjZjU2YzZjJywKICAgICAgICBwZXJjZW50YWdlOiA4MAogICAgICB9XQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMucmVsb2FkKCk7CiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5yZWxvYWQoKTsKICAgIH0sIDEwMDAgKiAxMCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICAgIHRoaXMudGltZXIgPSBudWxsOwogIH0sCiAgbWV0aG9kczogewogICAgcmVsb2FkOiBmdW5jdGlvbiByZWxvYWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3lpZWxkJGdldFN5c3RlbVN0YXRlLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRTeXN0ZW1TdGF0ZSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkZ2V0U3lzdGVtU3RhdGUgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRnZXRTeXN0ZW1TdGF0ZS5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMyLnN0YXRlID0gZGF0YS5zZXJ2ZXI7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["state.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA,SAAA,cAAA,QAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAHA;AAHA,KAAA;AASA,GAZA;AAaA,EAAA,OAbA,qBAaA;AAAA;;AACA,SAAA,MAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,MAAA;AACA,KAFA,EAEA,OAAA,EAFA,CAAA;AAGA,GAlBA;AAmBA,EAAA,aAnBA,2BAmBA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,cAAA,EADA;;AAAA;AAAA;AACA,gBAAA,IADA,yBACA,IADA;AAEA,gBAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAvBA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"15\" class=\"system_state\">\r\n      <el-col :span=\"12\">\r\n        <el-card v-if=\"state.os\" class=\"card_item\">\r\n          <div slot=\"header\">Runtime</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">os:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.goos\" />\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">cpu nums:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.numCpu\" />\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">compiler:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.compiler\" />\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">go version:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.goVersion\" />\r\n            </el-row>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">goroutine nums:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.os.numGoroutine\" />\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card v-if=\"state.disk\" class=\"card_item\">\r\n          <div slot=\"header\">Disk</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.totalMb\" />\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.usedMb\" />\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (GB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.totalGb\" />\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (GB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.disk.usedGb\" />\r\n                </el-row>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-progress\r\n                  type=\"dashboard\"\r\n                  :percentage=\"state.disk.usedPercent\"\r\n                  :color=\"colors\"\r\n                />\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row :gutter=\"15\" class=\"system_state\">\r\n      <el-col :span=\"12\">\r\n        <el-card\r\n          v-if=\"state.cpu\"\r\n          class=\"card_item\"\r\n          :body-style=\"{ height: '180px', 'overflow-y': 'scroll' }\"\r\n        >\r\n          <div slot=\"header\">CPU</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">physical number of cores:</el-col>\r\n              <el-col :span=\"12\" v-text=\"state.cpu.cores\" />\r\n            </el-row>\r\n            <template v-for=\"(item, index) in state.cpu.cpus\">\r\n              <el-row :key=\"index\" :gutter=\"10\">\r\n                <el-col :span=\"12\">core {{ index }}:</el-col>\r\n                <el-col\r\n                  :span=\"12\"\r\n                ><el-progress\r\n                  type=\"line\"\r\n                  :percentage=\"+item.toFixed(0)\"\r\n                  :color=\"colors\"\r\n                /></el-col>\r\n              </el-row>\r\n            </template>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card v-if=\"state.ram\" class=\"card_item\">\r\n          <div slot=\"header\">Ram</div>\r\n          <div>\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"12\">\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.ram.totalMb\" />\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (MB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.ram.usedMb\" />\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">total (GB)</el-col>\r\n                  <el-col :span=\"12\" v-text=\"state.ram.totalMb / 1024\" />\r\n                </el-row>\r\n                <el-row :gutter=\"10\">\r\n                  <el-col :span=\"12\">used (GB)</el-col>\r\n                  <el-col\r\n                    :span=\"12\"\r\n                    v-text=\"(state.ram.usedMb / 1024).toFixed(2)\"\r\n                  />\r\n                </el-row>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-progress\r\n                  type=\"dashboard\"\r\n                  :percentage=\"state.ram.usedPercent\"\r\n                  :color=\"colors\"\r\n                />\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getSystemState } from '@/api/system'\r\nexport default {\r\n  name: 'State',\r\n  data() {\r\n    return {\r\n      timer: null,\r\n      state: {},\r\n      colors: [\r\n        { color: '#5cb87a', percentage: 20 },\r\n        { color: '#e6a23c', percentage: 40 },\r\n        { color: '#f56c6c', percentage: 80 }\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    this.reload()\r\n    this.timer = setInterval(() => {\r\n      this.reload()\r\n    }, 1000 * 10)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n    this.timer = null\r\n  },\r\n  methods: {\r\n    async reload() {\r\n      const { data } = await getSystemState()\r\n      this.state = data.server\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.system_state {\r\n  padding: 10px;\r\n}\r\n\r\n.card_item {\r\n  height: 280px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/view/system"}]}