{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\example\\upload\\upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\console\\web\\src\\view\\example\\upload\\upload.vue","mtime":1629733204967},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629645113861},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1629645113236},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629645113861},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1629645123321}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpjb25zdCBwYXRoID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSQ0KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnDQppbXBvcnQgaW5mb0xpc3QgZnJvbSAnQC9taXhpbnMvaW5mb0xpc3QnDQppbXBvcnQgeyBnZXRGaWxlTGlzdCwgZGVsZXRlRmlsZSB9IGZyb20gJ0AvYXBpL2ZpbGVVcGxvYWRBbmREb3dubG9hZCcNCmltcG9ydCB7IGRvd25sb2FkSW1hZ2UgfSBmcm9tICdAL3V0aWxzL2Rvd25sb2FkSW1nJw0KaW1wb3J0IHsgZm9ybWF0VGltZVRvU3RyIH0gZnJvbSAnQC91dGlscy9kYXRlJw0KaW1wb3J0IEN1c3RvbVBpYyBmcm9tICdAL2NvbXBvbmVudHMvY3VzdG9tUGljJw0KaW1wb3J0IFVwbG9hZEltYWdlIGZyb20gJ0AvY29tcG9uZW50cy91cGxvYWQvaW1hZ2UudnVlJw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnVXBsb2FkJywNCiAgY29tcG9uZW50czogew0KICAgIEN1c3RvbVBpYywNCiAgICBVcGxvYWRJbWFnZQ0KICB9LA0KICBmaWx0ZXJzOiB7DQogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24odGltZSkgew0KICAgICAgaWYgKHRpbWUgIT09IG51bGwgJiYgdGltZSAhPT0gJycpIHsNCiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh0aW1lKQ0KICAgICAgICByZXR1cm4gZm9ybWF0VGltZVRvU3RyKGRhdGUsICd5eXl5LU1NLWRkIGhoOm1tOnNzJykNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiAnJw0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgbWl4aW5zOiBbaW5mb0xpc3RdLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBmdWxsc2NyZWVuTG9hZGluZzogZmFsc2UsDQogICAgICBsaXN0QXBpOiBnZXRGaWxlTGlzdCwNCiAgICAgIHBhdGg6IHBhdGgsDQogICAgICB0YWJsZURhdGE6IFtdLA0KICAgICAgaW1hZ2VVcmw6ICcnDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoJ3VzZXInLCBbJ3VzZXJJbmZvJywgJ3Rva2VuJ10pDQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRUYWJsZURhdGEoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZGVsZXRlRmlsZShyb3cpIHsNCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuawuOS5heaWh+S7tiwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7DQogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywNCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsDQogICAgICAgIHR5cGU6ICd3YXJuaW5nJw0KICAgICAgfSkNCiAgICAgICAgLnRoZW4oYXN5bmMoKSA9PiB7DQogICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZGVsZXRlRmlsZShyb3cpDQogICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAwKSB7DQogICAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLA0KICAgICAgICAgICAgICBtZXNzYWdlOiAn5Yig6Zmk5oiQ5YqfIScNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICBpZiAodGhpcy50YWJsZURhdGEubGVuZ3RoID09PSAxICYmIHRoaXMucGFnZSA+IDEpIHsNCiAgICAgICAgICAgICAgdGhpcy5wYWdlLS0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuZ2V0VGFibGVEYXRhKCkNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoKSA9PiB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgICB0eXBlOiAnaW5mbycsDQogICAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJw0KICAgICAgICAgIH0pDQogICAgICAgIH0pDQogICAgfSwNCiAgICBjaGVja0ZpbGUoZmlsZSkgew0KICAgICAgdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IHRydWUNCiAgICAgIGNvbnN0IGlzSlBHID0gZmlsZS50eXBlID09PSAnaW1hZ2UvanBlZycNCiAgICAgIGNvbnN0IGlzUG5nID0gZmlsZS50eXBlID09PSAnaW1hZ2UvcG5nJw0KICAgICAgY29uc3QgaXNMdDJNID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCAyDQogICAgICBpZiAoIWlzSlBHICYmICFpc1BuZykgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLTlg4/lm77niYflj6rog73mmK8gSlBH5oiWcG5nIOagvOW8jyEnKQ0KICAgICAgICB0aGlzLmZ1bGxzY3JlZW5Mb2FkaW5nID0gZmFsc2UNCiAgICAgIH0NCiAgICAgIGlmICghaXNMdDJNKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWktOWDj+WbvueJh+Wkp+Wwj+S4jeiDvei2hei/hyAyTUIhJykNCiAgICAgICAgdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IGZhbHNlDQogICAgICB9DQogICAgICByZXR1cm4gKGlzUG5nIHx8IGlzSlBHKSAmJiBpc0x0Mk0NCiAgICB9LA0KICAgIHVwbG9hZFN1Y2Nlc3MocmVzKSB7DQogICAgICB0aGlzLmZ1bGxzY3JlZW5Mb2FkaW5nID0gZmFsc2UNCiAgICAgIGlmIChyZXMuY29kZSA9PT0gMCkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsDQogICAgICAgICAgbWVzc2FnZTogJ+S4iuS8oOaIkOWKnycNCiAgICAgICAgfSkNCiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAwKSB7DQogICAgICAgICAgdGhpcy5nZXRUYWJsZURhdGEoKQ0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgICB0eXBlOiAnd2FybmluZycsDQogICAgICAgICAgbWVzc2FnZTogcmVzLm1zZw0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgIH0sDQogICAgdXBsb2FkRXJyb3IoKSB7DQogICAgICB0aGlzLiRtZXNzYWdlKHsNCiAgICAgICAgdHlwZTogJ2Vycm9yJywNCiAgICAgICAgbWVzc2FnZTogJ+S4iuS8oOWksei0pScNCiAgICAgIH0pDQogICAgICB0aGlzLmZ1bGxzY3JlZW5Mb2FkaW5nID0gZmFsc2UNCiAgICB9LA0KICAgIGRvd25sb2FkRmlsZShyb3cpIHsNCiAgICAgIGRvd25sb2FkSW1hZ2Uocm93LnVybCwgcm93Lm5hbWUpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload.vue","sourceRoot":"src/view/example/upload","sourcesContent":["<template>\r\n  <div v-loading.fullscreen.lock=\"fullscreenLoading\">\r\n    <div class=\"upload\">\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-upload\r\n            :action=\"`${path}/fileUploadAndDownload/upload`\"\r\n            :before-upload=\"checkFile\"\r\n            :headers=\"{ 'x-token': token }\"\r\n            :on-error=\"uploadError\"\r\n            :on-success=\"uploadSuccess\"\r\n            :show-file-list=\"false\">\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n          </el-upload>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          带压缩的上传, (512(k)为压缩限制)\r\n          <upload-image v-model=\"imageUrl\" :file-size=\"512\" :max-w-h=\"1080\" @on-success=\"getTableData\" />\r\n          已上传文件 {{ imageUrl }}\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-table :data=\"tableData\" border stripe>\r\n        <el-table-column label=\"预览\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <CustomPic pic-type=\"file\" :pic-src=\"scope.row.url\" />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"日期\" prop=\"UpdatedAt\" width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            <div>{{ scope.row.UpdatedAt | formatDate }}</div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"文件名\" prop=\"name\" width=\"180\" />\r\n        <el-table-column label=\"链接\" prop=\"url\" min-width=\"300\" />\r\n        <el-table-column label=\"标签\" prop=\"tag\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag\r\n              :type=\"scope.row.tag === 'jpg' ? 'primary' : 'success'\"\r\n              disable-transitions\r\n            >{{ scope.row.tag }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"small\" type=\"text\" @click=\"downloadFile(scope.row)\">下载</el-button>\r\n            <el-button size=\"small\" type=\"text\" @click=\"deleteFile(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        :current-page=\"page\"\r\n        :page-size=\"pageSize\"\r\n        :page-sizes=\"[10, 30, 50, 100]\"\r\n        :style=\"{ float: 'right', padding: '20px' }\"\r\n        :total=\"total\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @current-change=\"handleCurrentChange\"\r\n        @size-change=\"handleSizeChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst path = process.env.VUE_APP_BASE_API\r\nimport { mapGetters } from 'vuex'\r\nimport infoList from '@/mixins/infoList'\r\nimport { getFileList, deleteFile } from '@/api/fileUploadAndDownload'\r\nimport { downloadImage } from '@/utils/downloadImg'\r\nimport { formatTimeToStr } from '@/utils/date'\r\nimport CustomPic from '@/components/customPic'\r\nimport UploadImage from '@/components/upload/image.vue'\r\nexport default {\r\n  name: 'Upload',\r\n  components: {\r\n    CustomPic,\r\n    UploadImage\r\n  },\r\n  filters: {\r\n    formatDate: function(time) {\r\n      if (time !== null && time !== '') {\r\n        var date = new Date(time)\r\n        return formatTimeToStr(date, 'yyyy-MM-dd hh:mm:ss')\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n  },\r\n  mixins: [infoList],\r\n  data() {\r\n    return {\r\n      fullscreenLoading: false,\r\n      listApi: getFileList,\r\n      path: path,\r\n      tableData: [],\r\n      imageUrl: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters('user', ['userInfo', 'token'])\r\n  },\r\n  created() {\r\n    this.getTableData()\r\n  },\r\n  methods: {\r\n    async deleteFile(row) {\r\n      this.$confirm('此操作将永久文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        .then(async() => {\r\n          const res = await deleteFile(row)\r\n          if (res.code === 0) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            })\r\n            if (this.tableData.length === 1 && this.page > 1) {\r\n              this.page--\r\n            }\r\n            this.getTableData()\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })\r\n        })\r\n    },\r\n    checkFile(file) {\r\n      this.fullscreenLoading = true\r\n      const isJPG = file.type === 'image/jpeg'\r\n      const isPng = file.type === 'image/png'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n      if (!isJPG && !isPng) {\r\n        this.$message.error('上传头像图片只能是 JPG或png 格式!')\r\n        this.fullscreenLoading = false\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!')\r\n        this.fullscreenLoading = false\r\n      }\r\n      return (isPng || isJPG) && isLt2M\r\n    },\r\n    uploadSuccess(res) {\r\n      this.fullscreenLoading = false\r\n      if (res.code === 0) {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '上传成功'\r\n        })\r\n        if (res.code === 0) {\r\n          this.getTableData()\r\n        }\r\n      } else {\r\n        this.$message({\r\n          type: 'warning',\r\n          message: res.msg\r\n        })\r\n      }\r\n    },\r\n    uploadError() {\r\n      this.$message({\r\n        type: 'error',\r\n        message: '上传失败'\r\n      })\r\n      this.fullscreenLoading = false\r\n    },\r\n    downloadFile(row) {\r\n      downloadImage(row.url, row.name)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}