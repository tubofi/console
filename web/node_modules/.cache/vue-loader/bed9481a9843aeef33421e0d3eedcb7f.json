{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\superAdmin\\menu\\menu.vue?vue&type=style&index=0&id=129350f5&scoped=true&lang=scss&","dependencies":[{"path":"E:\\console\\web\\src\\view\\superAdmin\\menu\\menu.vue","mtime":1629645124118},{"path":"E:\\console\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1629645116935},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1629645123321},{"path":"E:\\console\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":1629645121812},{"path":"E:\\console\\web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1629645122374},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629645113861},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1629645123321}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5idXR0b24tYm94IHsNCiAgcGFkZGluZzogMTBweCAyMHB4Ow0KICAuZWwtYnV0dG9uIHsNCiAgICBmbG9hdDogcmlnaHQ7DQogIH0NCn0NCi53YXJuaW5nIHsNCiAgY29sb3I6ICNkYzE0M2M7DQp9DQo="},{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"menu.vue","sourceRoot":"src/view/superAdmin/menu","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"button-box clearflex\">\r\n      <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"addMenu('0')\">新增根菜单</el-button>\r\n    </div>\r\n\r\n    <!-- 由于此处菜单跟左侧列表一一对应所以不需要分页 pageSize默认999 -->\r\n    <el-table :data=\"tableData\" border row-key=\"ID\" stripe>\r\n      <el-table-column label=\"ID\" min-width=\"100\" prop=\"ID\" />\r\n      <el-table-column label=\"路由Name\" min-width=\"160\" prop=\"name\" />\r\n      <el-table-column label=\"路由Path\" min-width=\"160\" prop=\"path\" />\r\n      <el-table-column label=\"是否隐藏\" min-width=\"100\" prop=\"hidden\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.hidden?\"隐藏\":\"显示\" }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"父节点\" min-width=\"90\" prop=\"parentId\" />\r\n      <el-table-column label=\"排序\" min-width=\"70\" prop=\"sort\" />\r\n      <el-table-column label=\"文件路径\" min-width=\"360\" prop=\"component\" />\r\n      <el-table-column label=\"展示名称\" min-width=\"120\" prop=\"authorityName\">\r\n        <template slot-scope=\"scope\">\r\n          <span>{{ scope.row.meta.title }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"图标\" min-width=\"140\" prop=\"authorityName\">\r\n        <template slot-scope=\"scope\">\r\n          <i :class=\"`el-icon-${scope.row.meta.icon}`\" />\r\n          <span>{{ scope.row.meta.icon }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"300\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"addMenu(scope.row.ID)\"\r\n          >添加子菜单</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            icon=\"el-icon-edit\"\r\n            @click=\"editMenu(scope.row.ID)\"\r\n          >编辑</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            icon=\"el-icon-delete\"\r\n            @click=\"deleteMenu(scope.row.ID)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :before-close=\"handleClose\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form\r\n        ref=\"menuForm\"\r\n        :inline=\"true\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        label-width=\"85px\"\r\n      >\r\n        <el-form-item label=\"路由name\" prop=\"path\" style=\"width:30%\">\r\n          <el-input\r\n            v-model=\"form.name\"\r\n            autocomplete=\"off\"\r\n            placeholder=\"唯一英文字符串\"\r\n            @change=\"changeName\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item prop=\"path\" style=\"width:30%\">\r\n          <div slot=\"label\" style=\"display:inline-block\">\r\n            路由path\r\n            <el-checkbox v-model=\"checkFlag\" style=\"float:right;margin-left:20px;\">添加参数</el-checkbox>\r\n          </div>\r\n          <el-input\r\n            v-model=\"form.path\"\r\n            :disabled=\"!checkFlag\"\r\n            autocomplete=\"off\"\r\n            placeholder=\"建议只在后方拼接参数\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"是否隐藏\" style=\"width:30%\">\r\n          <el-select v-model=\"form.hidden\" placeholder=\"是否在列表隐藏\">\r\n            <el-option :value=\"false\" label=\"否\" />\r\n            <el-option :value=\"true\" label=\"是\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"父节点Id\" style=\"width:30%\">\r\n          <el-cascader\r\n            v-model=\"form.parentId\"\r\n            :disabled=\"!isEdit\"\r\n            :options=\"menuOption\"\r\n            :props=\"{ checkStrictly: true,label:'title',value:'ID',disabled:'disabled',emitPath:false}\"\r\n            :show-all-levels=\"false\"\r\n            filterable\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"文件路径\" prop=\"component\" style=\"width:60%\">\r\n          <el-input v-model=\"form.component\" autocomplete=\"off\" />\r\n          <span style=\"font-size:12px;margin-right:12px;\">如果菜单包含子菜单，请创建router-view二级路由页面或者</span><el-button size=\"mini\" @click=\"form.component = 'view/routerHolder.vue'\">点我设置</el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"展示名称\" prop=\"meta.title\" style=\"width:30%\">\r\n          <el-input v-model=\"form.meta.title\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"图标\" prop=\"meta.icon\" style=\"width:30%\">\r\n          <icon :meta=\"form.meta\">\r\n            <template slot=\"prepend\">el-icon-</template>\r\n          </icon>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序标记\" prop=\"sort\" style=\"width:30%\">\r\n          <el-input v-model.number=\"form.sort\" autocomplete=\"off\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"keepAlive\" prop=\"meta.keepAlive\" style=\"width:30%\">\r\n          <el-select v-model=\"form.meta.keepAlive\" placeholder=\"是否keepAlive缓存页面\">\r\n            <el-option :value=\"false\" label=\"否\" />\r\n            <el-option :value=\"true\" label=\"是\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"closeTab\" prop=\"meta.closeTab\" style=\"width:30%\">\r\n          <el-select v-model=\"form.meta.closeTab\" placeholder=\"是否自动关闭tab\">\r\n            <el-option :value=\"false\" label=\"否\" />\r\n            <el-option :value=\"true\" label=\"是\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"warning\">新增菜单需要在角色管理内配置权限才可使用</div>\r\n      <div>\r\n        <el-button\r\n          size=\"small\"\r\n          type=\"primary\"\r\n          icon=\"el-icon-edit\"\r\n          @click=\"addParameter(form)\"\r\n        >新增菜单参数</el-button>\r\n        <el-table :data=\"form.parameters\" stripe style=\"width: 100%\">\r\n          <el-table-column prop=\"type\" label=\"参数类型\" width=\"180\">\r\n            <template slot-scope=\"scope\">\r\n              <el-select v-model=\"scope.row.type\" placeholder=\"请选择\">\r\n                <el-option key=\"query\" value=\"query\" label=\"query\" />\r\n                <el-option key=\"params\" value=\"params\" label=\"params\" />\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"key\" label=\"参数key\" width=\"180\">\r\n            <template slot-scope=\"scope\">\r\n              <div>\r\n                <el-input v-model=\"scope.row.key\" />\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"value\" label=\"参数值\">\r\n            <template slot-scope=\"scope\">\r\n              <div>\r\n                <el-input v-model=\"scope.row.value\" />\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column>\r\n            <template slot-scope=\"scope\">\r\n              <div>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"small\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"deleteParameter(form.parameters,scope.$index)\"\r\n                >删除</el-button>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"closeDialog\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"enterDialog\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成\r\n\r\nimport {\r\n  updateBaseMenu,\r\n  getMenuList,\r\n  addBaseMenu,\r\n  deleteBaseMenu,\r\n  getBaseMenuById\r\n} from '@/api/menu'\r\nimport infoList from '@/mixins/infoList'\r\nimport icon from '@/view/superAdmin/menu/icon'\r\nexport default {\r\n  name: 'Menus',\r\n  components: {\r\n    icon\r\n  },\r\n  mixins: [infoList],\r\n  data() {\r\n    return {\r\n      checkFlag: false,\r\n      listApi: getMenuList,\r\n      dialogFormVisible: false,\r\n      dialogTitle: '新增菜单',\r\n      menuOption: [\r\n        {\r\n          ID: '0',\r\n          title: '根菜单'\r\n        }\r\n      ],\r\n      form: {\r\n        ID: 0,\r\n        path: '',\r\n        name: '',\r\n        hidden: '',\r\n        parentId: '',\r\n        component: '',\r\n        meta: {\r\n          title: '',\r\n          icon: '',\r\n          defaultMenu: false,\r\n          closeTab: false,\r\n          keepAlive: false\r\n        },\r\n        parameters: []\r\n      },\r\n      rules: {\r\n        path: [{ required: true, message: '请输入菜单name', trigger: 'blur' }],\r\n        component: [\r\n          { required: true, message: '请输入文件路径', trigger: 'blur' }\r\n        ],\r\n        'meta.title': [\r\n          { required: true, message: '请输入菜单展示名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      isEdit: false,\r\n      test: ''\r\n    }\r\n  },\r\n  async created() {\r\n    this.pageSize = 999\r\n    await this.getTableData()\r\n  },\r\n  methods: {\r\n    addParameter(form) {\r\n      if (!form.parameters) {\r\n        this.$set(form, 'parameters', [])\r\n      }\r\n      form.parameters.push({\r\n        type: 'query',\r\n        key: '',\r\n        value: ''\r\n      })\r\n    },\r\n    deleteParameter(parameters, index) {\r\n      parameters.splice(index, 1)\r\n    },\r\n    changeName() {\r\n      this.form.path = this.form.name\r\n    },\r\n    setOptions() {\r\n      this.menuOption = [\r\n        {\r\n          ID: '0',\r\n          title: '根目录'\r\n        }\r\n      ]\r\n      this.setMenuOptions(this.tableData, this.menuOption, false)\r\n    },\r\n    setMenuOptions(menuData, optionsData, disabled) {\r\n      menuData &&\r\n        menuData.map(item => {\r\n          if (item.children && item.children.length) {\r\n            const option = {\r\n              title: item.meta.title,\r\n              ID: String(item.ID),\r\n              disabled: disabled || item.ID === this.form.ID,\r\n              children: []\r\n            }\r\n            this.setMenuOptions(\r\n              item.children,\r\n              option.children,\r\n              disabled || item.ID === this.form.ID\r\n            )\r\n            optionsData.push(option)\r\n          } else {\r\n            const option = {\r\n              title: item.meta.title,\r\n              ID: String(item.ID),\r\n              disabled: disabled || item.ID === this.form.ID\r\n            }\r\n            optionsData.push(option)\r\n          }\r\n        })\r\n    },\r\n    handleClose(done) {\r\n      this.initForm()\r\n      done()\r\n    },\r\n    // 懒加载子菜单\r\n    load(tree, treeNode, resolve) {\r\n      resolve([\r\n        {\r\n          id: 31,\r\n          date: '2016-05-01',\r\n          name: '王小虎',\r\n          address: '上海市普陀区金沙江路 1519 弄'\r\n        },\r\n        {\r\n          id: 32,\r\n          date: '2016-05-01',\r\n          name: '王小虎',\r\n          address: '上海市普陀区金沙江路 1519 弄'\r\n        }\r\n      ])\r\n    },\r\n    // 删除菜单\r\n    deleteMenu(ID) {\r\n      this.$confirm('此操作将永久删除所有角色下该菜单, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        .then(async() => {\r\n          const res = await deleteBaseMenu({ ID })\r\n          if (res.code === 0) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            })\r\n            if (this.tableData.length === 1 && this.page > 1) {\r\n              this.page--\r\n            }\r\n            this.getTableData()\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })\r\n        })\r\n    },\r\n    // 初始化弹窗内表格方法\r\n    initForm() {\r\n      this.checkFlag = false\r\n      this.$refs.menuForm.resetFields()\r\n      this.form = {\r\n        ID: 0,\r\n        path: '',\r\n        name: '',\r\n        hidden: '',\r\n        parentId: '',\r\n        component: '',\r\n        meta: {\r\n          title: '',\r\n          icon: '',\r\n          defaultMenu: false,\r\n          keepAlive: ''\r\n        }\r\n      }\r\n    },\r\n    // 关闭弹窗\r\n    closeDialog() {\r\n      this.initForm()\r\n      this.dialogFormVisible = false\r\n    },\r\n    // 添加menu\r\n    async enterDialog() {\r\n      this.$refs.menuForm.validate(async valid => {\r\n        if (valid) {\r\n          let res\r\n          if (this.isEdit) {\r\n            res = await updateBaseMenu(this.form)\r\n          } else {\r\n            res = await addBaseMenu(this.form)\r\n          }\r\n          if (res.code === 0) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: this.isEdit ? '编辑成功' : '添加成功!'\r\n            })\r\n            this.getTableData()\r\n          }\r\n          this.initForm()\r\n          this.dialogFormVisible = false\r\n        }\r\n      })\r\n    },\r\n    // 添加菜单方法，id为 0则为添加根菜单\r\n    addMenu(id) {\r\n      this.dialogTitle = '新增菜单'\r\n      this.form.parentId = String(id)\r\n      this.isEdit = false\r\n      this.setOptions()\r\n      this.dialogFormVisible = true\r\n    },\r\n    // 修改菜单方法\r\n    async editMenu(id) {\r\n      this.dialogTitle = '编辑菜单'\r\n      const res = await getBaseMenuById({ id })\r\n      this.form = res.data.menu\r\n      this.isEdit = true\r\n      this.setOptions()\r\n      this.dialogFormVisible = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.button-box {\r\n  padding: 10px 20px;\r\n  .el-button {\r\n    float: right;\r\n  }\r\n}\r\n.warning {\r\n  color: #dc143c;\r\n}\r\n</style>\r\n"]}]}