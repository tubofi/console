{"remainingRequest":"E:\\临时文件夹\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\临时文件夹\\console\\web\\src\\view\\superAdmin\\api\\api.vue?vue&type=style&index=0&id=1ed9dbea&scoped=true&lang=scss&","dependencies":[{"path":"E:\\临时文件夹\\console\\web\\src\\view\\superAdmin\\api\\api.vue","mtime":1625854608000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\临时文件夹\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnV0dG9uLWJveCB7CiAgcGFkZGluZzogMTBweCAyMHB4OwogIC5lbC1idXR0b24gewogICAgZmxvYXQ6IHJpZ2h0OwogIH0KfQouZWwtdGFnLS1taW5pIHsKICBtYXJnaW4tbGVmdDogNXB4Owp9Ci53YXJuaW5nIHsKICBjb2xvcjogI2RjMTQzYzsKfQo="},{"version":3,"sources":["api.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"api.vue","sourceRoot":"src/view/superAdmin/api","sourcesContent":["<template>\n  <div>\n    <div class=\"search-term\">\n      <el-form :inline=\"true\" :model=\"searchInfo\" class=\"demo-form-inline\">\n        <el-form-item label=\"路径\">\n          <el-input v-model=\"searchInfo.path\" placeholder=\"路径\" />\n        </el-form-item>\n        <el-form-item label=\"描述\">\n          <el-input v-model=\"searchInfo.description\" placeholder=\"描述\" />\n        </el-form-item>\n        <el-form-item label=\"api组\">\n          <el-input v-model=\"searchInfo.apiGroup\" placeholder=\"api组\" />\n        </el-form-item>\n        <el-form-item label=\"请求\">\n          <el-select v-model=\"searchInfo.method\" clearable placeholder=\"请选择\">\n            <el-option\n              v-for=\"item in methodOptions\"\n              :key=\"item.value\"\n              :label=\"`${item.label}(${item.value})`\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"openDialog('addApi')\">新增</el-button>\n          <el-popover v-model=\"deleteVisible\" placement=\"top\" width=\"160\">\n            <p>确定要删除吗？</p>\n            <div style=\"text-align: right; margin: 0\">\n              <el-button size=\"mini\" type=\"text\" @click=\"deleteVisible = false\">取消</el-button>\n              <el-button size=\"mini\" type=\"primary\" @click=\"onDelete\">确定</el-button>\n            </div>\n            <el-button slot=\"reference\" icon=\"el-icon-delete\" size=\"mini\" type=\"danger\" style=\"margin-left: 10px;\">批量删除</el-button>\n          </el-popover>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-table :data=\"tableData\" border stripe @sort-change=\"sortChange\" @selection-change=\"handleSelectionChange\">\n      <el-table-column\n        type=\"selection\"\n        width=\"55\"\n      />\n      <el-table-column label=\"id\" min-width=\"60\" prop=\"ID\" sortable=\"custom\" />\n      <el-table-column label=\"api路径\" min-width=\"150\" prop=\"path\" sortable=\"custom\" />\n      <el-table-column label=\"api分组\" min-width=\"150\" prop=\"apiGroup\" sortable=\"custom\" />\n      <el-table-column label=\"api简介\" min-width=\"150\" prop=\"description\" sortable=\"custom\" />\n      <el-table-column label=\"请求\" min-width=\"150\" prop=\"method\" sortable=\"custom\">\n        <template slot-scope=\"scope\">\n          <div>\n            {{ scope.row.method }}\n            <el-tag\n              :key=\"scope.row.methodFiletr\"\n              :type=\"scope.row.method|tagTypeFiletr\"\n              effect=\"dark\"\n              size=\"mini\"\n            >{{ scope.row.method|methodFiletr }}</el-tag>\n            <!-- {{scope.row.method|methodFiletr}} -->\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"small\" type=\"primary\" icon=\"el-icon-edit\" @click=\"editApi(scope.row)\">编辑</el-button>\n          <el-button\n            size=\"small\"\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            @click=\"deleteApi(scope.row)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      :current-page=\"page\"\n      :page-size=\"pageSize\"\n      :page-sizes=\"[10, 30, 50, 100]\"\n      :style=\"{float:'right',padding:'20px'}\"\n      :total=\"total\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      @current-change=\"handleCurrentChange\"\n      @size-change=\"handleSizeChange\"\n    />\n\n    <el-dialog :before-close=\"closeDialog\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"apiForm\" :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"路径\" prop=\"path\">\n          <el-input v-model=\"form.path\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item label=\"请求\" prop=\"method\">\n          <el-select v-model=\"form.method\" placeholder=\"请选择\">\n            <el-option\n              v-for=\"item in methodOptions\"\n              :key=\"item.value\"\n              :label=\"`${item.label}(${item.value})`\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"api分组\" prop=\"apiGroup\">\n          <el-input v-model=\"form.apiGroup\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item label=\"api简介\" prop=\"description\">\n          <el-input v-model=\"form.description\" autocomplete=\"off\" />\n        </el-form-item>\n      </el-form>\n      <div class=\"warning\">新增Api需要在角色管理内配置权限才可使用</div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"enterDialog\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成 条件搜索时候 请把条件安好后台定制的结构体字段 放到 this.searchInfo 中即可实现条件搜索\n\nimport {\n  getApiById,\n  getApiList,\n  createApi,\n  updateApi,\n  deleteApi,\n  deleteApisByIds\n} from '@/api/api'\nimport infoList from '@/mixins/infoList'\nimport { toSQLLine } from '@/utils/stringFun'\nconst methodOptions = [\n  {\n    value: 'POST',\n    label: '创建',\n    type: 'success'\n  },\n  {\n    value: 'GET',\n    label: '查看',\n    type: ''\n  },\n  {\n    value: 'PUT',\n    label: '更新',\n    type: 'warning'\n  },\n  {\n    value: 'DELETE',\n    label: '删除',\n    type: 'danger'\n  }\n]\n\nexport default {\n  name: 'Api',\n  filters: {\n    methodFiletr(value) {\n      const target = methodOptions.filter(item => item.value === value)[0]\n      // return target && `${target.label}(${target.value})`\n      return target && `${target.label}`\n    },\n    tagTypeFiletr(value) {\n      const target = methodOptions.filter(item => item.value === value)[0]\n      return target && `${target.type}`\n    }\n  },\n  mixins: [infoList],\n  data() {\n    return {\n      deleteVisible: false,\n      listApi: getApiList,\n      dialogFormVisible: false,\n      dialogTitle: '新增Api',\n      apis: [],\n      form: {\n        path: '',\n        apiGroup: '',\n        method: '',\n        description: ''\n      },\n      methodOptions: methodOptions,\n      type: '',\n      rules: {\n        path: [{ required: true, message: '请输入api路径', trigger: 'blur' }],\n        apiGroup: [\n          { required: true, message: '请输入组名称', trigger: 'blur' }\n        ],\n        method: [\n          { required: true, message: '请选择请求方式', trigger: 'blur' }\n        ],\n        description: [\n          { required: true, message: '请输入api介绍', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getTableData()\n  },\n  methods: {\n    //  选中api\n    handleSelectionChange(val) {\n      this.apis = val\n    },\n    async onDelete() {\n      const ids = this.apis.map(item => item.ID)\n      const res = await deleteApisByIds({ ids })\n      if (res.code === 0) {\n        this.$message({\n          type: 'success',\n          message: res.msg\n        })\n        if (this.tableData.length === ids.length && this.page > 1) {\n          this.page--\n        }\n        this.deleteVisible = false\n        this.getTableData()\n      }\n    },\n    // 排序\n    sortChange({ prop, order }) {\n      if (prop) {\n        this.searchInfo.orderKey = toSQLLine(prop)\n        this.searchInfo.desc = order === 'descending'\n      }\n      this.getTableData()\n    },\n    // 条件搜索前端看此方法\n    onSubmit() {\n      this.page = 1\n      this.pageSize = 10\n      this.getTableData()\n    },\n    initForm() {\n      this.$refs.apiForm.resetFields()\n      this.form = {\n        path: '',\n        apiGroup: '',\n        method: '',\n        description: ''\n      }\n    },\n    closeDialog() {\n      this.initForm()\n      this.dialogFormVisible = false\n    },\n    openDialog(type) {\n      switch (type) {\n        case 'addApi':\n          this.dialogTitle = '新增Api'\n          break\n        case 'edit':\n          this.dialogTitle = '编辑Api'\n          break\n        default:\n          break\n      }\n      this.type = type\n      this.dialogFormVisible = true\n    },\n    async editApi(row) {\n      const res = await getApiById({ id: row.ID })\n      this.form = res.data.api\n      this.openDialog('edit')\n    },\n    async deleteApi(row) {\n      this.$confirm('此操作将永久删除所有角色下该api, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          const res = await deleteApi(row)\n          if (res.code === 0) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            })\n            if (this.tableData.length === 1 && this.page > 1) {\n              this.page--\n            }\n            this.getTableData()\n          }\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n    },\n    async enterDialog() {\n      this.$refs.apiForm.validate(async valid => {\n        if (valid) {\n          switch (this.type) {\n            case 'addApi':\n              {\n                const res = await createApi(this.form)\n                if (res.code === 0) {\n                  this.$message({\n                    type: 'success',\n                    message: '添加成功',\n                    showClose: true\n                  })\n                }\n                this.getTableData()\n                this.closeDialog()\n              }\n\n              break\n            case 'edit':\n              {\n                const res = await updateApi(this.form)\n                if (res.code === 0) {\n                  this.$message({\n                    type: 'success',\n                    message: '编辑成功',\n                    showClose: true\n                  })\n                }\n                this.getTableData()\n                this.closeDialog()\n              }\n              break\n            default:\n              // eslint-disable-next-line no-lone-blocks\n              {\n                this.$message({\n                  type: 'error',\n                  message: '未知操作',\n                  showClose: true\n                })\n              }\n              break\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.button-box {\n  padding: 10px 20px;\n  .el-button {\n    float: right;\n  }\n}\n.el-tag--mini {\n  margin-left: 5px;\n}\n.warning {\n  color: #dc143c;\n}\n</style>\n"]}]}