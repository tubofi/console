{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\layout\\aside\\historyComponent\\history.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\console\\web\\src\\view\\layout\\aside\\historyComponent\\history.vue","mtime":1629377582309},{"path":"E:\\console\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1629377572556},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1629377580375},{"path":"E:\\console\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":1629377577534},{"path":"E:\\console\\web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1629377578872},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629377571573},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1629377580375}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29udGV4dG1lbnUgew0KICB3aWR0aDogMTAwcHg7DQogIG1hcmdpbjogMDsNCiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsNCiAgYmFja2dyb3VuZDogI2ZmZjsNCiAgei1pbmRleDogMzAwMDsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7DQogIHBhZGRpbmc6IDVweCAwOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIGZvbnQtc2l6ZTogMTRweDsNCiAgY29sb3I6ICMzMzM7DQogIGJveC1zaGFkb3c6IDJweCAycHggM3B4IDAgcmdiYSgwLCAwLCAwLCAwLjIpOw0KfQ0KLmVsLXRhYnNfX2l0ZW0gLmVsLWljb24tY2xvc2V7DQogIGNvbG9yOiBpbml0aWFsICFpbXBvcnRhbnQ7DQp9DQouZWwtdGFic19faXRlbSAuZG90IHsNCiAgY29udGVudDogIiI7DQogIHdpZHRoOiA5cHg7DQogIGhlaWdodDogOXB4Ow0KICBtYXJnaW4tcmlnaHQ6IDhweDsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBib3JkZXItcmFkaXVzOiA1MCU7DQogIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjJzOw0KfQ0KDQouY29udGV4dG1lbnUgbGkgew0KICBtYXJnaW46IDA7DQogIHBhZGRpbmc6IDdweCAxNnB4Ow0KfQ0KLmNvbnRleHRtZW51IGxpOmhvdmVyIHsNCiAgYmFja2dyb3VuZDogI2YyZjJmMjsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0K"},{"version":3,"sources":["history.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"history.vue","sourceRoot":"src/view/layout/aside/historyComponent","sourcesContent":["<template>\r\n  <div class=\"router-history\">\r\n    <el-tabs\r\n      v-model=\"activeValue\"\r\n      :closable=\"!(historys.length===1&&this.$route.name===defaultRouter)\"\r\n      type=\"card\"\r\n      @contextmenu.prevent.native=\"openContextMenu($event)\"\r\n      @tab-click=\"changeTab\"\r\n      @tab-remove=\"removeTab\"\r\n    >\r\n      <el-tab-pane\r\n        v-for=\"item in historys\"\r\n        :key=\"name(item)\"\r\n        :label=\"item.meta.title\"\r\n        :name=\"name(item)\"\r\n        :tab=\"item\"\r\n        class=\"gva-tab\"\r\n      >\r\n        <span slot=\"label\" :style=\"{color: activeValue===name(item)?activeColor:'#333'}\"><i class=\"dot\" :style=\"{backgroundColor:activeValue===name(item)?activeColor:'#ddd'}\" /> {{ item.meta.title }}</span>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n    <!--自定义右键菜单html代码-->\r\n    <ul v-show=\"contextMenuVisible\" :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\">\r\n      <li @click=\"closeAll\">关闭所有</li>\r\n      <li @click=\"closeLeft\">关闭左侧</li>\r\n      <li @click=\"closeRight\">关闭右侧</li>\r\n      <li @click=\"closeOther\">关闭其他</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nconst getFmtString = (item) => {\r\n  return item.name +\r\n      JSON.stringify(item.query) +\r\n      JSON.stringify(item.params)\r\n}\r\nexport default {\r\n  name: 'HistoryComponent',\r\n  data() {\r\n    return {\r\n      historys: [],\r\n      activeValue: '',\r\n      contextMenuVisible: false,\r\n      left: 0,\r\n      top: 0,\r\n      isCollapse: false,\r\n      isMobile: false,\r\n      rightActive: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters('user', ['userInfo', 'activeColor']),\r\n    defaultRouter() {\r\n      return this.userInfo.authority.defaultRouter\r\n    }\r\n  },\r\n  watch: {\r\n    contextMenuVisible() {\r\n      if (this.contextMenuVisible) {\r\n        document.body.addEventListener('click', () => {\r\n          this.contextMenuVisible = false\r\n        })\r\n      } else {\r\n        document.body.removeEventListener('click', () => {\r\n          this.contextMenuVisible = false\r\n        })\r\n      }\r\n    },\r\n    $route(to, now) {\r\n      this.historys = this.historys.filter(item => !item.meta.closeTab)\r\n      this.setTab(to)\r\n      sessionStorage.setItem('historys', JSON.stringify(this.historys))\r\n      this.activeValue = window.sessionStorage.getItem('activeValue')\r\n      if (now && to && now.name === to.name) {\r\n        this.$bus.$emit('reload')\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.$bus.on('mobile', isMobile => {\r\n      this.isMobile = isMobile\r\n    })\r\n    this.$bus.on('collapse', isCollapse => {\r\n      this.isCollapse = isCollapse\r\n    })\r\n    const initHistorys = [\r\n      {\r\n        name: this.defaultRouter,\r\n        meta: {\r\n          title: '首页'\r\n        },\r\n        query: {},\r\n        params: {}\r\n      }\r\n    ]\r\n    this.historys =\r\n      JSON.parse(sessionStorage.getItem('historys')) || initHistorys\r\n    if (!window.sessionStorage.getItem('activeValue')) {\r\n      this.activeValue = getFmtString(this.$route)\r\n    } else {\r\n      this.activeValue = window.sessionStorage.getItem('activeValue')\r\n    }\r\n    this.setTab(this.$route)\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.$bus.off('collapse')\r\n    this.$bus.off('mobile')\r\n  },\r\n  methods: {\r\n    name(item) {\r\n      return item.name + JSON.stringify(item.query) + JSON.stringify(item.params)\r\n    },\r\n    openContextMenu(e) {\r\n      if (this.historys.length === 1 && this.$route.name === this.defaultRouter) {\r\n        return false\r\n      }\r\n      let id = ''\r\n      if (e.srcElement.nodeName === 'SPAN') {\r\n        console.log(e)\r\n        id = e.srcElement.offsetParent.id\r\n      } else {\r\n        id = e.srcElement.id\r\n      }\r\n      if (id) {\r\n        this.contextMenuVisible = true\r\n        let width\r\n        if (this.isCollapse) {\r\n          width = 54\r\n        } else {\r\n          width = 220\r\n        }\r\n        if (this.isMobile) {\r\n          width = 0\r\n        }\r\n        this.left = e.clientX - width\r\n        this.top = e.clientY + 10\r\n        this.rightActive = id.split('-')[1]\r\n      }\r\n    },\r\n    closeAll() {\r\n      this.historys = [\r\n        {\r\n          name: this.defaultRouter,\r\n          meta: {\r\n            title: '首页'\r\n          },\r\n          query: {},\r\n          params: {}\r\n        }\r\n      ]\r\n      this.$router.push({ name: this.defaultRouter })\r\n      this.contextMenuVisible = false\r\n      sessionStorage.setItem('historys', JSON.stringify(this.historys))\r\n    },\r\n    closeLeft() {\r\n      let right\r\n      const rightIndex = this.historys.findIndex(item => {\r\n        if (getFmtString(item) === this.rightActive) {\r\n          right = item\r\n        }\r\n        return (\r\n          getFmtString(item) === this.rightActive\r\n        )\r\n      })\r\n      const activeIndex = this.historys.findIndex(\r\n        item => getFmtString(item) === this.activeValue\r\n      )\r\n      this.historys.splice(0, rightIndex)\r\n      if (rightIndex > activeIndex) {\r\n        this.$router.push(right)\r\n      }\r\n      sessionStorage.setItem('historys', JSON.stringify(this.historys))\r\n    },\r\n    closeRight() {\r\n      let right\r\n      const leftIndex = this.historys.findIndex(item => {\r\n        if (getFmtString(item) === this.rightActive) {\r\n          right = item\r\n        }\r\n        return (getFmtString(item) === this.rightActive)\r\n      })\r\n      const activeIndex = this.historys.findIndex(\r\n        item => getFmtString(item) === this.activeValue\r\n      )\r\n      this.historys.splice(leftIndex + 1, this.historys.length)\r\n      if (leftIndex < activeIndex) {\r\n        this.$router.push(right)\r\n      }\r\n      sessionStorage.setItem('historys', JSON.stringify(this.historys))\r\n    },\r\n    closeOther() {\r\n      let right\r\n      this.historys = this.historys.filter(item => {\r\n        if (getFmtString(item) === this.rightActive\r\n        ) {\r\n          right = item\r\n        }\r\n        return (getFmtString(item) === this.rightActive\r\n        )\r\n      })\r\n      this.$router.push(right)\r\n      sessionStorage.setItem('historys', JSON.stringify(this.historys))\r\n    },\r\n    isSame(route1, route2) {\r\n      if (route1.name !== route2.name) {\r\n        return false\r\n      }\r\n      for (const key in route1.query) {\r\n        if (route1.query[key] !== route2.query[key]) {\r\n          return false\r\n        }\r\n      }\r\n      for (const key in route1.params) {\r\n        if (route1.params[key] !== route2.params[key]) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    setTab(route) {\r\n      if (!this.historys.some(item => this.isSame(item, route))) {\r\n        const obj = {}\r\n        obj.name = route.name\r\n        obj.meta = route.meta\r\n        obj.query = route.query\r\n        obj.params = route.params\r\n        this.historys.push(obj)\r\n      }\r\n      window.sessionStorage.setItem(\r\n        'activeValue',\r\n        getFmtString(this.$route)\r\n      )\r\n    },\r\n    changeTab(component) {\r\n      const tab = component.$attrs.tab\r\n      this.$router.push({\r\n        name: tab.name,\r\n        query: tab.query,\r\n        params: tab.params\r\n      })\r\n    },\r\n    removeTab(tab) {\r\n      const index = this.historys.findIndex(\r\n        item => getFmtString(item) === tab\r\n      )\r\n      if (\r\n        getFmtString(this.$route) === tab\r\n      ) {\r\n        if (this.historys.length === 1) {\r\n          this.$router.push({ name: this.defaultRouter })\r\n        } else {\r\n          if (index < this.historys.length - 1) {\r\n            this.$router.push({\r\n              name: this.historys[index + 1].name,\r\n              query: this.historys[index + 1].query,\r\n              params: this.historys[index + 1].params\r\n            })\r\n          } else {\r\n            this.$router.push({\r\n              name: this.historys[index - 1].name,\r\n              query: this.historys[index - 1].query,\r\n              params: this.historys[index - 1].params\r\n            })\r\n          }\r\n        }\r\n      }\r\n      this.historys.splice(index, 1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.contextmenu {\r\n  width: 100px;\r\n  margin: 0;\r\n  border: 1px solid #ccc;\r\n  background: #fff;\r\n  z-index: 3000;\r\n  position: absolute;\r\n  list-style-type: none;\r\n  padding: 5px 0;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  color: #333;\r\n  box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.2);\r\n}\r\n.el-tabs__item .el-icon-close{\r\n  color: initial !important;\r\n}\r\n.el-tabs__item .dot {\r\n  content: \"\";\r\n  width: 9px;\r\n  height: 9px;\r\n  margin-right: 8px;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  transition: background-color .2s;\r\n}\r\n\r\n.contextmenu li {\r\n  margin: 0;\r\n  padding: 7px 16px;\r\n}\r\n.contextmenu li:hover {\r\n  background: #f2f2f2;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}