{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\superAdmin\\authority\\components\\apis.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\console\\web\\src\\view\\superAdmin\\authority\\components\\apis.vue","mtime":1625854608000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEFsbEFwaXMgfSBmcm9tICdAL2FwaS9hcGknCmltcG9ydCB7IFVwZGF0ZUNhc2JpbiwgZ2V0UG9saWN5UGF0aEJ5QXV0aG9yaXR5SWQgfSBmcm9tICdAL2FwaS9jYXNiaW4nCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBpcycsCiAgcHJvcHM6IHsKICAgIHJvdzogewogICAgICBkZWZhdWx0OiBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4ge30KICAgICAgfSwKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXBpVHJlZURhdGE6IFtdLAogICAgICBhcGlUcmVlSWRzOiBbXSwKICAgICAgbmVlZENvbmZpcm06IGZhbHNlLAogICAgICBhcGlEZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ2Rlc2NyaXB0aW9uJwogICAgICB9CiAgICB9CiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgLy8g6I635Y+WYXBp5bm25pW055CG5oiQ5qCR57uT5p6ECiAgICBjb25zdCByZXMyID0gYXdhaXQgZ2V0QWxsQXBpcygpCiAgICBjb25zdCBhcGlzID0gcmVzMi5kYXRhLmFwaXMKCiAgICB0aGlzLmFwaVRyZWVEYXRhID0gdGhpcy5idWlsZEFwaVRyZWUoYXBpcykKICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFBvbGljeVBhdGhCeUF1dGhvcml0eUlkKHsKICAgICAgYXV0aG9yaXR5SWQ6IHRoaXMucm93LmF1dGhvcml0eUlkCiAgICB9KQogICAgdGhpcy5hY3RpdmVVc2VySWQgPSB0aGlzLnJvdy5hdXRob3JpdHlJZAogICAgdGhpcy5hcGlUcmVlSWRzID0gW10KICAgIHJlcy5kYXRhLnBhdGhzICYmIHJlcy5kYXRhLnBhdGhzLm1hcChpdGVtID0+IHsKICAgICAgdGhpcy5hcGlUcmVlSWRzLnB1c2goJ3A6JyArIGl0ZW0ucGF0aCArICdtOicgKyBpdGVtLm1ldGhvZCkKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICBub2RlQ2hhbmdlKCkgewogICAgICB0aGlzLm5lZWRDb25maXJtID0gdHJ1ZQogICAgfSwKICAgIC8vIOaatOmcsue7meWkluWxguS9v+eUqOeahOWIh+aNouaLpuaIque7n+S4gOaWueazlQogICAgZW50ZXJBbmROZXh0KCkgewogICAgICB0aGlzLmF1dGhBcGlFbnRlcigpCiAgICB9LAogICAgLy8g5Yib5bu6YXBp5qCR5pa55rOVCiAgICBidWlsZEFwaVRyZWUoYXBpcykgewogICAgICBjb25zdCBhcGlPYmogPSB7fQogICAgICBhcGlzICYmCiAgICAgICAgYXBpcy5tYXAoaXRlbSA9PiB7CiAgICAgICAgICBpdGVtLm9ubHlJZCA9ICdwOicgKyBpdGVtLnBhdGggKyAnbTonICsgaXRlbS5tZXRob2QKICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYXBpT2JqLCBpdGVtLmFwaUdyb3VwKSkgewogICAgICAgICAgICBhcGlPYmpbaXRlbS5hcGlHcm91cF0ucHVzaChpdGVtKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihhcGlPYmosIHsgW2l0ZW0uYXBpR3JvdXBdOiBbaXRlbV0gfSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBjb25zdCBhcGlUcmVlID0gW10KICAgICAgZm9yIChjb25zdCBrZXkgaW4gYXBpT2JqKSB7CiAgICAgICAgY29uc3QgdHJlZU5vZGUgPSB7CiAgICAgICAgICBJRDoga2V5LAogICAgICAgICAgZGVzY3JpcHRpb246IGtleSArICfnu4QnLAogICAgICAgICAgY2hpbGRyZW46IGFwaU9ialtrZXldCiAgICAgICAgfQogICAgICAgIGFwaVRyZWUucHVzaCh0cmVlTm9kZSkKICAgICAgfQogICAgICByZXR1cm4gYXBpVHJlZQogICAgfSwKICAgIC8vIOWFs+iBlOWFs+ezu+ehruWumgogICAgYXN5bmMgYXV0aEFwaUVudGVyKCkgewogICAgICBjb25zdCBjaGVja0FyciA9IHRoaXMuJHJlZnMuYXBpVHJlZS5nZXRDaGVja2VkTm9kZXModHJ1ZSkKICAgICAgdmFyIGNhc2JpbkluZm9zID0gW10KICAgICAgY2hlY2tBcnIgJiYgY2hlY2tBcnIubWFwKGl0ZW0gPT4gewogICAgICAgIHZhciBjYXNiaW5JbmZvID0gewogICAgICAgICAgcGF0aDogaXRlbS5wYXRoLAogICAgICAgICAgbWV0aG9kOiBpdGVtLm1ldGhvZAogICAgICAgIH0KICAgICAgICBjYXNiaW5JbmZvcy5wdXNoKGNhc2JpbkluZm8pCiAgICAgIH0pCiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IFVwZGF0ZUNhc2Jpbih7CiAgICAgICAgYXV0aG9yaXR5SWQ6IHRoaXMuYWN0aXZlVXNlcklkLAogICAgICAgIGNhc2JpbkluZm9zCiAgICAgIH0pCiAgICAgIGlmIChyZXMuY29kZSA9PT0gMCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoeyB0eXBlOiAnc3VjY2VzcycsIG1lc3NhZ2U6ICdhcGnorr7nva7miJDlip8nIH0pCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["apis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"apis.vue","sourceRoot":"src/view/superAdmin/authority/components","sourcesContent":["<template>\n  <div>\n    <div class=\"clearflex\">\n      <el-button class=\"fl-right\" size=\"small\" type=\"primary\" @click=\"authApiEnter\">确 定</el-button>\n    </div>\n    <el-tree\n      ref=\"apiTree\"\n      :data=\"apiTreeData\"\n      :default-checked-keys=\"apiTreeIds\"\n      :props=\"apiDefaultProps\"\n      default-expand-all\n      highlight-current\n      node-key=\"onlyId\"\n      show-checkbox\n      @check=\"nodeChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport { getAllApis } from '@/api/api'\nimport { UpdateCasbin, getPolicyPathByAuthorityId } from '@/api/casbin'\nexport default {\n  name: 'Apis',\n  props: {\n    row: {\n      default: function() {\n        return {}\n      },\n      type: Object\n    }\n  },\n  data() {\n    return {\n      apiTreeData: [],\n      apiTreeIds: [],\n      needConfirm: false,\n      apiDefaultProps: {\n        children: 'children',\n        label: 'description'\n      }\n    }\n  },\n  async created() {\n    // 获取api并整理成树结构\n    const res2 = await getAllApis()\n    const apis = res2.data.apis\n\n    this.apiTreeData = this.buildApiTree(apis)\n    const res = await getPolicyPathByAuthorityId({\n      authorityId: this.row.authorityId\n    })\n    this.activeUserId = this.row.authorityId\n    this.apiTreeIds = []\n    res.data.paths && res.data.paths.map(item => {\n      this.apiTreeIds.push('p:' + item.path + 'm:' + item.method)\n    })\n  },\n  methods: {\n    nodeChange() {\n      this.needConfirm = true\n    },\n    // 暴露给外层使用的切换拦截统一方法\n    enterAndNext() {\n      this.authApiEnter()\n    },\n    // 创建api树方法\n    buildApiTree(apis) {\n      const apiObj = {}\n      apis &&\n        apis.map(item => {\n          item.onlyId = 'p:' + item.path + 'm:' + item.method\n          if (Object.prototype.hasOwnProperty.call(apiObj, item.apiGroup)) {\n            apiObj[item.apiGroup].push(item)\n          } else {\n            Object.assign(apiObj, { [item.apiGroup]: [item] })\n          }\n        })\n      const apiTree = []\n      for (const key in apiObj) {\n        const treeNode = {\n          ID: key,\n          description: key + '组',\n          children: apiObj[key]\n        }\n        apiTree.push(treeNode)\n      }\n      return apiTree\n    },\n    // 关联关系确定\n    async authApiEnter() {\n      const checkArr = this.$refs.apiTree.getCheckedNodes(true)\n      var casbinInfos = []\n      checkArr && checkArr.map(item => {\n        var casbinInfo = {\n          path: item.path,\n          method: item.method\n        }\n        casbinInfos.push(casbinInfo)\n      })\n      const res = await UpdateCasbin({\n        authorityId: this.activeUserId,\n        casbinInfos\n      })\n      if (res.code === 0) {\n        this.$message({ type: 'success', message: 'api设置成功' })\n      }\n    }\n  }\n}\n</script>\n"]}]}