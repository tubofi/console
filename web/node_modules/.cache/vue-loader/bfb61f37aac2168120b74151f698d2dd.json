{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\superAdmin\\authority\\components\\apis.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\console\\web\\src\\view\\superAdmin\\authority\\components\\apis.vue","mtime":1629377582325},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629377571573},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1629377569839},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1629377571573},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1629377580375}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZXRBbGxBcGlzIH0gZnJvbSAnQC9hcGkvYXBpJw0KaW1wb3J0IHsgVXBkYXRlQ2FzYmluLCBnZXRQb2xpY3lQYXRoQnlBdXRob3JpdHlJZCB9IGZyb20gJ0AvYXBpL2Nhc2JpbicNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0FwaXMnLA0KICBwcm9wczogew0KICAgIHJvdzogew0KICAgICAgZGVmYXVsdDogZnVuY3Rpb24oKSB7DQogICAgICAgIHJldHVybiB7fQ0KICAgICAgfSwNCiAgICAgIHR5cGU6IE9iamVjdA0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgYXBpVHJlZURhdGE6IFtdLA0KICAgICAgYXBpVHJlZUlkczogW10sDQogICAgICBuZWVkQ29uZmlybTogZmFsc2UsDQogICAgICBhcGlEZWZhdWx0UHJvcHM6IHsNCiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsDQogICAgICAgIGxhYmVsOiAnZGVzY3JpcHRpb24nDQogICAgICB9DQogICAgfQ0KICB9LA0KICBhc3luYyBjcmVhdGVkKCkgew0KICAgIC8vIOiOt+WPlmFwaeW5tuaVtOeQhuaIkOagkee7k+aehA0KICAgIGNvbnN0IHJlczIgPSBhd2FpdCBnZXRBbGxBcGlzKCkNCiAgICBjb25zdCBhcGlzID0gcmVzMi5kYXRhLmFwaXMNCg0KICAgIHRoaXMuYXBpVHJlZURhdGEgPSB0aGlzLmJ1aWxkQXBpVHJlZShhcGlzKQ0KICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFBvbGljeVBhdGhCeUF1dGhvcml0eUlkKHsNCiAgICAgIGF1dGhvcml0eUlkOiB0aGlzLnJvdy5hdXRob3JpdHlJZA0KICAgIH0pDQogICAgdGhpcy5hY3RpdmVVc2VySWQgPSB0aGlzLnJvdy5hdXRob3JpdHlJZA0KICAgIHRoaXMuYXBpVHJlZUlkcyA9IFtdDQogICAgcmVzLmRhdGEucGF0aHMgJiYgcmVzLmRhdGEucGF0aHMubWFwKGl0ZW0gPT4gew0KICAgICAgdGhpcy5hcGlUcmVlSWRzLnB1c2goJ3A6JyArIGl0ZW0ucGF0aCArICdtOicgKyBpdGVtLm1ldGhvZCkNCiAgICB9KQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgbm9kZUNoYW5nZSgpIHsNCiAgICAgIHRoaXMubmVlZENvbmZpcm0gPSB0cnVlDQogICAgfSwNCiAgICAvLyDmmrTpnLLnu5nlpJblsYLkvb/nlKjnmoTliIfmjaLmi6bmiKrnu5/kuIDmlrnms5UNCiAgICBlbnRlckFuZE5leHQoKSB7DQogICAgICB0aGlzLmF1dGhBcGlFbnRlcigpDQogICAgfSwNCiAgICAvLyDliJvlu7phcGnmoJHmlrnms5UNCiAgICBidWlsZEFwaVRyZWUoYXBpcykgew0KICAgICAgY29uc3QgYXBpT2JqID0ge30NCiAgICAgIGFwaXMgJiYNCiAgICAgICAgYXBpcy5tYXAoaXRlbSA9PiB7DQogICAgICAgICAgaXRlbS5vbmx5SWQgPSAncDonICsgaXRlbS5wYXRoICsgJ206JyArIGl0ZW0ubWV0aG9kDQogICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcGlPYmosIGl0ZW0uYXBpR3JvdXApKSB7DQogICAgICAgICAgICBhcGlPYmpbaXRlbS5hcGlHcm91cF0ucHVzaChpdGVtKQ0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBPYmplY3QuYXNzaWduKGFwaU9iaiwgeyBbaXRlbS5hcGlHcm91cF06IFtpdGVtXSB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgIGNvbnN0IGFwaVRyZWUgPSBbXQ0KICAgICAgZm9yIChjb25zdCBrZXkgaW4gYXBpT2JqKSB7DQogICAgICAgIGNvbnN0IHRyZWVOb2RlID0gew0KICAgICAgICAgIElEOiBrZXksDQogICAgICAgICAgZGVzY3JpcHRpb246IGtleSArICfnu4QnLA0KICAgICAgICAgIGNoaWxkcmVuOiBhcGlPYmpba2V5XQ0KICAgICAgICB9DQogICAgICAgIGFwaVRyZWUucHVzaCh0cmVlTm9kZSkNCiAgICAgIH0NCiAgICAgIHJldHVybiBhcGlUcmVlDQogICAgfSwNCiAgICAvLyDlhbPogZTlhbPns7vnoa7lrpoNCiAgICBhc3luYyBhdXRoQXBpRW50ZXIoKSB7DQogICAgICBjb25zdCBjaGVja0FyciA9IHRoaXMuJHJlZnMuYXBpVHJlZS5nZXRDaGVja2VkTm9kZXModHJ1ZSkNCiAgICAgIHZhciBjYXNiaW5JbmZvcyA9IFtdDQogICAgICBjaGVja0FyciAmJiBjaGVja0Fyci5tYXAoaXRlbSA9PiB7DQogICAgICAgIHZhciBjYXNiaW5JbmZvID0gew0KICAgICAgICAgIHBhdGg6IGl0ZW0ucGF0aCwNCiAgICAgICAgICBtZXRob2Q6IGl0ZW0ubWV0aG9kDQogICAgICAgIH0NCiAgICAgICAgY2FzYmluSW5mb3MucHVzaChjYXNiaW5JbmZvKQ0KICAgICAgfSkNCiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IFVwZGF0ZUNhc2Jpbih7DQogICAgICAgIGF1dGhvcml0eUlkOiB0aGlzLmFjdGl2ZVVzZXJJZCwNCiAgICAgICAgY2FzYmluSW5mb3MNCiAgICAgIH0pDQogICAgICBpZiAocmVzLmNvZGUgPT09IDApIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7IHR5cGU6ICdzdWNjZXNzJywgbWVzc2FnZTogJ2Fwaeiuvue9ruaIkOWKnycgfSkNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["apis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"apis.vue","sourceRoot":"src/view/superAdmin/authority/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"clearflex\">\r\n      <el-button class=\"fl-right\" size=\"small\" type=\"primary\" @click=\"authApiEnter\">确 定</el-button>\r\n    </div>\r\n    <el-tree\r\n      ref=\"apiTree\"\r\n      :data=\"apiTreeData\"\r\n      :default-checked-keys=\"apiTreeIds\"\r\n      :props=\"apiDefaultProps\"\r\n      default-expand-all\r\n      highlight-current\r\n      node-key=\"onlyId\"\r\n      show-checkbox\r\n      @check=\"nodeChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAllApis } from '@/api/api'\r\nimport { UpdateCasbin, getPolicyPathByAuthorityId } from '@/api/casbin'\r\nexport default {\r\n  name: 'Apis',\r\n  props: {\r\n    row: {\r\n      default: function() {\r\n        return {}\r\n      },\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      apiTreeData: [],\r\n      apiTreeIds: [],\r\n      needConfirm: false,\r\n      apiDefaultProps: {\r\n        children: 'children',\r\n        label: 'description'\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    // 获取api并整理成树结构\r\n    const res2 = await getAllApis()\r\n    const apis = res2.data.apis\r\n\r\n    this.apiTreeData = this.buildApiTree(apis)\r\n    const res = await getPolicyPathByAuthorityId({\r\n      authorityId: this.row.authorityId\r\n    })\r\n    this.activeUserId = this.row.authorityId\r\n    this.apiTreeIds = []\r\n    res.data.paths && res.data.paths.map(item => {\r\n      this.apiTreeIds.push('p:' + item.path + 'm:' + item.method)\r\n    })\r\n  },\r\n  methods: {\r\n    nodeChange() {\r\n      this.needConfirm = true\r\n    },\r\n    // 暴露给外层使用的切换拦截统一方法\r\n    enterAndNext() {\r\n      this.authApiEnter()\r\n    },\r\n    // 创建api树方法\r\n    buildApiTree(apis) {\r\n      const apiObj = {}\r\n      apis &&\r\n        apis.map(item => {\r\n          item.onlyId = 'p:' + item.path + 'm:' + item.method\r\n          if (Object.prototype.hasOwnProperty.call(apiObj, item.apiGroup)) {\r\n            apiObj[item.apiGroup].push(item)\r\n          } else {\r\n            Object.assign(apiObj, { [item.apiGroup]: [item] })\r\n          }\r\n        })\r\n      const apiTree = []\r\n      for (const key in apiObj) {\r\n        const treeNode = {\r\n          ID: key,\r\n          description: key + '组',\r\n          children: apiObj[key]\r\n        }\r\n        apiTree.push(treeNode)\r\n      }\r\n      return apiTree\r\n    },\r\n    // 关联关系确定\r\n    async authApiEnter() {\r\n      const checkArr = this.$refs.apiTree.getCheckedNodes(true)\r\n      var casbinInfos = []\r\n      checkArr && checkArr.map(item => {\r\n        var casbinInfo = {\r\n          path: item.path,\r\n          method: item.method\r\n        }\r\n        casbinInfos.push(casbinInfo)\r\n      })\r\n      const res = await UpdateCasbin({\r\n        authorityId: this.activeUserId,\r\n        casbinInfos\r\n      })\r\n      if (res.code === 0) {\r\n        this.$message({ type: 'success', message: 'api设置成功' })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}