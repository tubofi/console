{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\superAdmin\\dictionary\\sysDictionary.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\console\\web\\src\\view\\superAdmin\\dictionary\\sysDictionary.vue","mtime":1625854608000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgY3JlYXRlU3lzRGljdGlvbmFyeSwKICBkZWxldGVTeXNEaWN0aW9uYXJ5LAogIHVwZGF0ZVN5c0RpY3Rpb25hcnksCiAgZmluZFN5c0RpY3Rpb25hcnksCiAgZ2V0U3lzRGljdGlvbmFyeUxpc3QKfSBmcm9tICdAL2FwaS9zeXNEaWN0aW9uYXJ5JyAvLyAg5q2k5aSE6K+36Ieq6KGM5pu/5o2i5Zyw5Z2ACmltcG9ydCB7IGZvcm1hdFRpbWVUb1N0ciB9IGZyb20gJ0AvdXRpbHMvZGF0ZScKaW1wb3J0IGluZm9MaXN0IGZyb20gJ0AvbWl4aW5zL2luZm9MaXN0JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1N5c0RpY3Rpb25hcnknLAogIGZpbHRlcnM6IHsKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uKHRpbWUpIHsKICAgICAgaWYgKHRpbWUgIT09IG51bGwgJiYgdGltZSAhPT0gJycpIHsKICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpCiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWVUb1N0cihkYXRlLCAneXl5eS1NTS1kZCBoaDptbTpzcycpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICcnCiAgICAgIH0KICAgIH0sCiAgICBmb3JtYXRCb29sZWFuOiBmdW5jdGlvbihib29sKSB7CiAgICAgIGlmIChib29sICE9PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIGJvb2wgPyAn5pivJyA6ICflkKYnCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICcnCiAgICAgIH0KICAgIH0KICB9LAogIG1peGluczogW2luZm9MaXN0XSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdEFwaTogZ2V0U3lzRGljdGlvbmFyeUxpc3QsCiAgICAgIGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgdHlwZTogJycsCiAgICAgIGZvcm1EYXRhOiB7CiAgICAgICAgbmFtZTogbnVsbCwKICAgICAgICB0eXBlOiBudWxsLAogICAgICAgIHN0YXR1czogdHJ1ZSwKICAgICAgICBkZXNjOiBudWxsCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWtl+WFuOWQje+8iOS4re+8iScsCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgdHlwZTogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWtl+WFuOWQje+8iOiLse+8iScsCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgZGVzYzogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeaPj+i/sCcsCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfQogICAgfQogIH0sCiAgYXN5bmMgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0VGFibGVEYXRhKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvRGV0aWxlKHJvdykgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ2RpY3Rpb25hcnlEZXRhaWwnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IHJvdy5JRAogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICAvLyDmnaHku7bmkJzntKLliY3nq6/nnIvmraTmlrnms5UKICAgIG9uU3VibWl0KCkgewogICAgICB0aGlzLnBhZ2UgPSAxCiAgICAgIHRoaXMucGFnZVNpemUgPSAxMAogICAgICBpZiAodGhpcy5zZWFyY2hJbmZvLnN0YXR1cyA9PT0gJycpIHsKICAgICAgICB0aGlzLnNlYXJjaEluZm8uc3RhdHVzID0gbnVsbAogICAgICB9CiAgICAgIHRoaXMuZ2V0VGFibGVEYXRhKCkKICAgIH0sCiAgICBhc3luYyB1cGRhdGVTeXNEaWN0aW9uYXJ5KHJvdykgewogICAgICBjb25zdCByZXMgPSBhd2FpdCBmaW5kU3lzRGljdGlvbmFyeSh7IElEOiByb3cuSUQgfSkKICAgICAgdGhpcy50eXBlID0gJ3VwZGF0ZScKICAgICAgaWYgKHJlcy5jb2RlID09PSAwKSB7CiAgICAgICAgdGhpcy5mb3JtRGF0YSA9IHJlcy5kYXRhLnJlc3lzRGljdGlvbmFyeQogICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlCiAgICAgIH0KICAgIH0sCiAgICBjbG9zZURpYWxvZygpIHsKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlCiAgICAgIHRoaXMuZm9ybURhdGEgPSB7CiAgICAgICAgbmFtZTogbnVsbCwKICAgICAgICB0eXBlOiBudWxsLAogICAgICAgIHN0YXR1czogdHJ1ZSwKICAgICAgICBkZXNjOiBudWxsCiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBkZWxldGVTeXNEaWN0aW9uYXJ5KHJvdykgewogICAgICByb3cudmlzaWJsZSA9IGZhbHNlCiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGRlbGV0ZVN5c0RpY3Rpb25hcnkoeyBJRDogcm93LklEIH0pCiAgICAgIGlmIChyZXMuY29kZSA9PT0gMCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnycKICAgICAgICB9KQogICAgICAgIGlmICh0aGlzLnRhYmxlRGF0YS5sZW5ndGggPT09IDEgJiYgdGhpcy5wYWdlID4gMSkgewogICAgICAgICAgdGhpcy5wYWdlLS0KICAgICAgICB9CiAgICAgICAgdGhpcy5nZXRUYWJsZURhdGEoKQogICAgICB9CiAgICB9LAogICAgYXN5bmMgZW50ZXJEaWFsb2coKSB7CiAgICAgIHRoaXMuJHJlZnNbJ2VsRm9ybSddLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4KICAgICAgICBsZXQgcmVzCiAgICAgICAgc3dpdGNoICh0aGlzLnR5cGUpIHsKICAgICAgICAgIGNhc2UgJ2NyZWF0ZSc6CiAgICAgICAgICAgIHJlcyA9IGF3YWl0IGNyZWF0ZVN5c0RpY3Rpb25hcnkodGhpcy5mb3JtRGF0YSkKICAgICAgICAgICAgYnJlYWsKICAgICAgICAgIGNhc2UgJ3VwZGF0ZSc6CiAgICAgICAgICAgIHJlcyA9IGF3YWl0IHVwZGF0ZVN5c0RpY3Rpb25hcnkodGhpcy5mb3JtRGF0YSkKICAgICAgICAgICAgYnJlYWsKICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHJlcyA9IGF3YWl0IGNyZWF0ZVN5c0RpY3Rpb25hcnkodGhpcy5mb3JtRGF0YSkKICAgICAgICAgICAgYnJlYWsKICAgICAgICB9CiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAwKSB7CiAgICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKCkKICAgICAgICAgIHRoaXMuZ2V0VGFibGVEYXRhKCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgb3BlbkRpYWxvZygpIHsKICAgICAgdGhpcy50eXBlID0gJ2NyZWF0ZScKICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWUKICAgIH0KICB9Cn0K"},{"version":3,"sources":["sysDictionary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"sysDictionary.vue","sourceRoot":"src/view/superAdmin/dictionary","sourcesContent":["<template>\n  <div>\n    <div class=\"search-term\">\n      <el-form :inline=\"true\" :model=\"searchInfo\" class=\"demo-form-inline\">\n        <el-form-item label=\"字典名（中）\">\n          <el-input v-model=\"searchInfo.name\" placeholder=\"搜索条件\" />\n        </el-form-item>\n        <el-form-item label=\"字典名（英）\">\n          <el-input v-model=\"searchInfo.type\" placeholder=\"搜索条件\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"searchInfo.status\" clear placeholder=\"请选择\">\n            <el-option key=\"true\" label=\"是\" value=\"true\" />\n            <el-option key=\"false\" label=\"否\" value=\"false\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"描述\">\n          <el-input v-model=\"searchInfo.desc\" placeholder=\"搜索条件\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">查询</el-button>\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"openDialog\">新增</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-table\n      ref=\"multipleTable\"\n      :data=\"tableData\"\n      border\n      stripe\n      style=\"width: 100%\"\n      tooltip-effect=\"dark\"\n    >\n      <el-table-column type=\"selection\" width=\"55\" />\n      <el-table-column label=\"日期\" width=\"180\">\n        <template slot-scope=\"scope\">{{ scope.row.CreatedAt|formatDate }}</template>\n      </el-table-column>\n\n      <el-table-column label=\"字典名（中）\" prop=\"name\" width=\"120\" />\n\n      <el-table-column label=\"字典名（英）\" prop=\"type\" width=\"120\" />\n\n      <el-table-column label=\"状态\" prop=\"status\" width=\"120\">\n        <template slot-scope=\"scope\">{{ scope.row.status|formatBoolean }}</template>\n      </el-table-column>\n\n      <el-table-column label=\"描述\" prop=\"desc\" width=\"280\" />\n\n      <el-table-column label=\"按钮组\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"success\" @click=\"toDetile(scope.row)\">详情</el-button>\n          <el-button size=\"mini\" type=\"primary\" @click=\"updateSysDictionary(scope.row)\">变更</el-button>\n          <el-popover v-model=\"scope.row.visible\" placement=\"top\" width=\"160\">\n            <p>确定要删除吗？</p>\n            <div style=\"text-align: right; margin: 0\">\n              <el-button size=\"mini\" type=\"text\" @click=\"scope.row.visible = false\">取消</el-button>\n              <el-button type=\"primary\" size=\"mini\" @click=\"deleteSysDictionary(scope.row)\">确定</el-button>\n            </div>\n            <el-button slot=\"reference\" type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" style=\"margin-left:10px\">删除</el-button>\n          </el-popover>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      :current-page=\"page\"\n      :page-size=\"pageSize\"\n      :page-sizes=\"[10, 30, 50, 100]\"\n      :style=\"{float:'right',padding:'20px'}\"\n      :total=\"total\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      @current-change=\"handleCurrentChange\"\n      @size-change=\"handleSizeChange\"\n    />\n\n    <el-dialog :before-close=\"closeDialog\" :visible.sync=\"dialogFormVisible\" title=\"弹窗操作\">\n      <el-form ref=\"elForm\" :model=\"formData\" :rules=\"rules\" size=\"medium\" label-width=\"110px\">\n        <el-form-item label=\"字典名（中）\" prop=\"name\">\n          <el-input\n            v-model=\"formData.name\"\n            placeholder=\"请输入字典名（中）\"\n            clearable\n            :style=\"{width: '100%'}\"\n          />\n        </el-form-item>\n        <el-form-item label=\"字典名（英）\" prop=\"type\">\n          <el-input\n            v-model=\"formData.type\"\n            placeholder=\"请输入字典名（英）\"\n            clearable\n            :style=\"{width: '100%'}\"\n          />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\" required>\n          <el-switch v-model=\"formData.status\" active-text=\"开启\" inactive-text=\"停用\" />\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"desc\">\n          <el-input v-model=\"formData.desc\" placeholder=\"请输入描述\" clearable :style=\"{width: '100%'}\" />\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"enterDialog\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <div style=\"margin-top:40px;color:red\">获取字典且缓存方法已在前端utils/dictionary 已经封装完成 不必自己书写 使用方法查看文件内注释</div>\n  </div>\n</template>\n\n<script>\nimport {\n  createSysDictionary,\n  deleteSysDictionary,\n  updateSysDictionary,\n  findSysDictionary,\n  getSysDictionaryList\n} from '@/api/sysDictionary' //  此处请自行替换地址\nimport { formatTimeToStr } from '@/utils/date'\nimport infoList from '@/mixins/infoList'\nexport default {\n  name: 'SysDictionary',\n  filters: {\n    formatDate: function(time) {\n      if (time !== null && time !== '') {\n        var date = new Date(time)\n        return formatTimeToStr(date, 'yyyy-MM-dd hh:mm:ss')\n      } else {\n        return ''\n      }\n    },\n    formatBoolean: function(bool) {\n      if (bool !== null) {\n        return bool ? '是' : '否'\n      } else {\n        return ''\n      }\n    }\n  },\n  mixins: [infoList],\n  data() {\n    return {\n      listApi: getSysDictionaryList,\n      dialogFormVisible: false,\n      type: '',\n      formData: {\n        name: null,\n        type: null,\n        status: true,\n        desc: null\n      },\n      rules: {\n        name: [\n          {\n            required: true,\n            message: '请输入字典名（中）',\n            trigger: 'blur'\n          }\n        ],\n        type: [\n          {\n            required: true,\n            message: '请输入字典名（英）',\n            trigger: 'blur'\n          }\n        ],\n        desc: [\n          {\n            required: true,\n            message: '请输入描述',\n            trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  async created() {\n    this.getTableData()\n  },\n  methods: {\n    toDetile(row) {\n      this.$router.push({\n        name: 'dictionaryDetail',\n        params: {\n          id: row.ID\n        }\n      })\n    },\n    // 条件搜索前端看此方法\n    onSubmit() {\n      this.page = 1\n      this.pageSize = 10\n      if (this.searchInfo.status === '') {\n        this.searchInfo.status = null\n      }\n      this.getTableData()\n    },\n    async updateSysDictionary(row) {\n      const res = await findSysDictionary({ ID: row.ID })\n      this.type = 'update'\n      if (res.code === 0) {\n        this.formData = res.data.resysDictionary\n        this.dialogFormVisible = true\n      }\n    },\n    closeDialog() {\n      this.dialogFormVisible = false\n      this.formData = {\n        name: null,\n        type: null,\n        status: true,\n        desc: null\n      }\n    },\n    async deleteSysDictionary(row) {\n      row.visible = false\n      const res = await deleteSysDictionary({ ID: row.ID })\n      if (res.code === 0) {\n        this.$message({\n          type: 'success',\n          message: '删除成功'\n        })\n        if (this.tableData.length === 1 && this.page > 1) {\n          this.page--\n        }\n        this.getTableData()\n      }\n    },\n    async enterDialog() {\n      this.$refs['elForm'].validate(async valid => {\n        if (!valid) return\n        let res\n        switch (this.type) {\n          case 'create':\n            res = await createSysDictionary(this.formData)\n            break\n          case 'update':\n            res = await updateSysDictionary(this.formData)\n            break\n          default:\n            res = await createSysDictionary(this.formData)\n            break\n        }\n        if (res.code === 0) {\n          this.closeDialog()\n          this.getTableData()\n        }\n      })\n    },\n    openDialog() {\n      this.type = 'create'\n      this.dialogFormVisible = true\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]}]}