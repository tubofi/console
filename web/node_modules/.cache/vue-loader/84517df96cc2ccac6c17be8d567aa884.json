{"remainingRequest":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\console\\web\\src\\view\\superAdmin\\authority\\authority.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\console\\web\\src\\view\\superAdmin\\authority\\authority.vue","mtime":1625854608000},{"path":"E:\\console\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\console\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdXRob3JpdHkgewogIC5lbC1pbnB1dC1udW1iZXIgewogICAgbWFyZ2luLWxlZnQ6IDE1cHg7CiAgICBzcGFuIHsKICAgICAgZGlzcGxheTogbm9uZTsKICAgIH0KICB9CiAgLmJ1dHRvbi1ib3ggewogICAgcGFkZGluZzogMTBweCAyMHB4OwogICAgLmVsLWJ1dHRvbiB7CiAgICAgIGZsb2F0OiByaWdodDsKICAgIH0KICB9Cn0KLnJvbGUtYm94IHsKICAuZWwtdGFic19fY29udGVudCB7CiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxNTBweCk7CiAgICBvdmVyZmxvdzogYXV0bzsKICB9Cn0K"},{"version":3,"sources":["authority.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"authority.vue","sourceRoot":"src/view/superAdmin/authority","sourcesContent":["<template>\n  <div class=\"authority\">\n    <div class=\"button-box clearflex\">\n      <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-plus\" @click=\"addAuthority('0')\">新增角色</el-button>\n    </div>\n    <el-table\n      :data=\"tableData\"\n      :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n      border\n      row-key=\"authorityId\"\n      stripe\n      style=\"width: 100%\"\n    >\n      <el-table-column label=\"角色id\" min-width=\"180\" prop=\"authorityId\" />\n      <el-table-column label=\"角色名称\" min-width=\"180\" prop=\"authorityName\" />\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"460\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" @click=\"opdendrawer(scope.row)\">设置权限</el-button>\n          <el-button\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"addAuthority(scope.row.authorityId)\"\n          >新增子角色</el-button>\n          <el-button\n            icon=\"el-icon-copy-document\"\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"copyAuthority(scope.row)\"\n          >拷贝</el-button>\n          <el-button\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"editAuthority(scope.row)\"\n          >编辑</el-button>\n          <el-button\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            type=\"danger\"\n            @click=\"deleteAuth(scope.row)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 新增角色弹窗 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"authorityForm\" :model=\"form\" :rules=\"rules\">\n        <el-form-item label=\"父级角色\" prop=\"parentId\">\n          <el-cascader\n            v-model=\"form.parentId\"\n            :disabled=\"dialogType=='add'\"\n            :options=\"AuthorityOption\"\n            :props=\"{ checkStrictly: true,label:'authorityName',value:'authorityId',disabled:'disabled',emitPath:false}\"\n            :show-all-levels=\"false\"\n            filterable\n          />\n        </el-form-item>\n        <el-form-item label=\"角色ID\" prop=\"authorityId\">\n          <el-input v-model=\"form.authorityId\" :disabled=\"dialogType=='edit'\" autocomplete=\"off\" />\n        </el-form-item>\n        <el-form-item label=\"角色姓名\" prop=\"authorityName\">\n          <el-input v-model=\"form.authorityName\" autocomplete=\"off\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeDialog\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"enterDialog\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-drawer v-if=\"drawer\" :visible.sync=\"drawer\" :with-header=\"false\" size=\"40%\" title=\"角色配置\">\n      <el-tabs :before-leave=\"autoEnter\" class=\"role-box\" type=\"border-card\">\n        <el-tab-pane label=\"角色菜单\">\n          <Menus ref=\"menus\" :row=\"activeRow\" />\n        </el-tab-pane>\n        <el-tab-pane label=\"角色api\">\n          <apis ref=\"apis\" :row=\"activeRow\" />\n        </el-tab-pane>\n        <el-tab-pane label=\"资源权限\">\n          <Datas ref=\"datas\" :authority=\"tableData\" :row=\"activeRow\" />\n        </el-tab-pane>\n      </el-tabs>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成\n\nimport {\n  getAuthorityList,\n  deleteAuthority,\n  createAuthority,\n  updateAuthority,\n  copyAuthority\n} from '@/api/authority'\n\nimport Menus from '@/view/superAdmin/authority/components/menus'\nimport Apis from '@/view/superAdmin/authority/components/apis'\nimport Datas from '@/view/superAdmin/authority/components/datas'\n\nimport infoList from '@/mixins/infoList'\nexport default {\n  name: 'Authority',\n  components: {\n    Menus,\n    Apis,\n    Datas\n  },\n  mixins: [infoList],\n  data() {\n    var mustUint = (rule, value, callback) => {\n      if (!/^[0-9]*[1-9][0-9]*$/.test(value)) {\n        return callback(new Error('请输入正整数'))\n      }\n      return callback()\n    }\n\n    return {\n      AuthorityOption: [\n        {\n          authorityId: '0',\n          authorityName: '根角色'\n        }\n      ],\n      listApi: getAuthorityList,\n      drawer: false,\n      dialogType: 'add',\n      activeRow: {},\n      activeUserId: 0,\n      dialogTitle: '新增角色',\n      dialogFormVisible: false,\n      apiDialogFlag: false,\n      copyForm: {},\n      form: {\n        authorityId: '',\n        authorityName: '',\n        parentId: '0'\n      },\n      rules: {\n        authorityId: [\n          { required: true, message: '请输入角色ID', trigger: 'blur' },\n          { validator: mustUint, trigger: 'blur' }\n        ],\n        authorityName: [\n          { required: true, message: '请输入角色名', trigger: 'blur' }\n        ],\n        parentId: [\n          { required: true, message: '请选择请求方式', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  async created() {\n    this.pageSize = 999\n    await this.getTableData()\n  },\n  methods: {\n    autoEnter(activeName, oldActiveName) {\n      const paneArr = ['menus', 'apis', 'datas']\n      if (oldActiveName) {\n        if (this.$refs[paneArr[oldActiveName]].needConfirm) {\n          this.$refs[paneArr[oldActiveName]].enterAndNext()\n          this.$refs[paneArr[oldActiveName]].needConfirm = false\n        }\n      }\n    },\n    // 拷贝角色\n    copyAuthority(row) {\n      this.setOptions()\n      this.dialogTitle = '拷贝角色'\n      this.dialogType = 'copy'\n      for (const k in this.form) {\n        this.form[k] = row[k]\n      }\n      this.copyForm = row\n      this.dialogFormVisible = true\n    },\n    opdendrawer(row) {\n      this.drawer = true\n      this.activeRow = row\n    },\n    // 删除角色\n    deleteAuth(row) {\n      this.$confirm('此操作将永久删除该角色, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          const res = await deleteAuthority({ authorityId: row.authorityId })\n          if (res.code === 0) {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            })\n            if (this.tableData.length === 1 && this.page > 1) {\n              this.page--\n            }\n            this.getTableData()\n          }\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n    },\n    // 初始化表单\n    initForm() {\n      if (this.$refs.authorityForm) {\n        this.$refs.authorityForm.resetFields()\n      }\n      this.form = {\n        authorityId: '',\n        authorityName: '',\n        parentId: '0'\n      }\n    },\n    // 关闭窗口\n    closeDialog() {\n      this.initForm()\n      this.dialogFormVisible = false\n      this.apiDialogFlag = false\n    },\n    // 确定弹窗\n\n    async enterDialog() {\n      if (this.form.authorityId === '0') {\n        this.$message({\n          type: 'error',\n          message: '角色id不能为0'\n        })\n        return false\n      }\n      this.$refs.authorityForm.validate(async valid => {\n        if (valid) {\n          switch (this.dialogType) {\n            case 'add':\n              {\n                const res = await createAuthority(this.form)\n                if (res.code === 0) {\n                  this.$message({\n                    type: 'success',\n                    message: '添加成功!'\n                  })\n                  this.getTableData()\n                  this.closeDialog()\n                }\n              }\n              break\n            case 'edit':\n              {\n                const res = await updateAuthority(this.form)\n                if (res.code === 0) {\n                  this.$message({\n                    type: 'success',\n                    message: '添加成功!'\n                  })\n                  this.getTableData()\n                  this.closeDialog()\n                }\n              }\n              break\n            case 'copy': {\n              const data = {\n                authority: {\n                  authorityId: 'string',\n                  authorityName: 'string',\n                  datauthorityId: [],\n                  parentId: 'string'\n                },\n                oldAuthorityId: 0\n              }\n              data.authority.authorityId = this.form.authorityId\n              data.authority.authorityName = this.form.authorityName\n              data.authority.parentId = this.form.parentId\n              data.authority.dataAuthorityId = this.copyForm.dataAuthorityId\n              data.oldAuthorityId = this.copyForm.authorityId\n              const res = await copyAuthority(data)\n              if (res.code === 0) {\n                this.$message({\n                  type: 'success',\n                  message: '复制成功！'\n                })\n                this.getTableData()\n              }\n            }\n          }\n\n          this.initForm()\n          this.dialogFormVisible = false\n        }\n      })\n    },\n    setOptions() {\n      this.AuthorityOption = [\n        {\n          authorityId: '0',\n          authorityName: '根角色'\n        }\n      ]\n      this.setAuthorityOptions(this.tableData, this.AuthorityOption, false)\n    },\n    setAuthorityOptions(AuthorityData, optionsData, disabled) {\n      this.form.authorityId = String(this.form.authorityId)\n      AuthorityData &&\n        AuthorityData.map(item => {\n          if (item.children && item.children.length) {\n            const option = {\n              authorityId: item.authorityId,\n              authorityName: item.authorityName,\n              disabled: disabled || item.authorityId === this.form.authorityId,\n              children: []\n            }\n            this.setAuthorityOptions(\n              item.children,\n              option.children,\n              disabled || item.authorityId === this.form.authorityId\n            )\n            optionsData.push(option)\n          } else {\n            const option = {\n              authorityId: item.authorityId,\n              authorityName: item.authorityName,\n              disabled: disabled || item.authorityId === this.form.authorityId\n            }\n            optionsData.push(option)\n          }\n        })\n    },\n    // 增加角色\n    addAuthority(parentId) {\n      this.initForm()\n      this.dialogTitle = '新增角色'\n      this.dialogType = 'add'\n      this.form.parentId = parentId\n      this.setOptions()\n      this.dialogFormVisible = true\n    },\n    // 编辑角色\n    editAuthority(row) {\n      this.setOptions()\n      this.dialogTitle = '编辑角色'\n      this.dialogType = 'edit'\n      for (const key in this.form) {\n        this.form[key] = row[key]\n      }\n      this.setOptions()\n      this.dialogFormVisible = true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.authority {\n  .el-input-number {\n    margin-left: 15px;\n    span {\n      display: none;\n    }\n  }\n  .button-box {\n    padding: 10px 20px;\n    .el-button {\n      float: right;\n    }\n  }\n}\n.role-box {\n  .el-tabs__content {\n    height: calc(100vh - 150px);\n    overflow: auto;\n  }\n}\n</style>\n"]}]}